---
type: custom:mushroom-chips-card
card_mod:
  class: middle-left
  style:
    .: |
      ha-card > * {
        font-family: Antonio;
      }
chips:
  - type: weather
    entity: weather.weather_station
    show_temperature: true
    show_conditions: false
  - type: conditional
    conditions:
      - entity: binary_sensor.wx_card
        state: 'on'
    chip:
      type: template
      entity: sensor.nws_alerts
      tap_action:
        action: navigate
        navigation_path: wxalert
      icon_color: |-
        {%- set ns = namespace(output="grey") %}
        {%- if states.sensor.nws_alerts.state | int > 0 %}
          {%- set description = states.sensor.nws_alerts.attributes.display_desc.split("\n\n-\n\n") %}
          {%- for desc in description %}
            {%- set expires = as_timestamp((desc.split("Expires: ")[1]).split("\nDescription")[0]) %}
            {%- if as_timestamp(now()) < expires %}
              {% set severity = states.sensor.nws_alerts.attributes.event_severity.split(" - ")[loop.index0] %}
              {%- if severity == "Extreme" %}
                {%- set ns.output = "red" %}
              {% elif severity == "Severe" %}
                {%- set ns.output = "yellow" %}
              {%- endif %}
            {%- endif %}
          {%- endfor %}
        {%- endif %}
        {{ ns.output }}
      content: |-
        {%- set ns = namespace(count = 0,index=0) %}
        {%- if states.sensor.nws_alerts.state | int > 0 %}
          {%- set description = states.sensor.nws_alerts.attributes.display_desc.split("\n\n-\n\n") %}
          {%- for desc in description %}
            {%- set expires = as_timestamp((desc.split("Expires: ")[1]).split("\nDescription")[0]) %}
            {%- if as_timestamp(now()) < expires %}
              {%- set ns.count = ns.count+1 %}
              {%- set ns.index = loop.index0 %}
            {%- endif %}
          {%- endfor %}
        {%- endif %}
        {%- if ns.count > 1 %}
          {{ns.count}} NWS Alerts
        {%- else %}
          {{states.sensor.nws_alerts.attributes.title.split(" - ")[ns.index]}}
        {%- endif %}
      icon: "{{states.sensor.nws_alerts.attributes.icon}}"

  - type: conditional
    conditions:
      - condition: numeric_state
        entity: counter.days_without_rain
        above: 6
    chip:
      type: template
      icon_color: grey
      content: >-
        Days Without Rain: {{ states.counter.days_without_rain.state }}
      icon: "{{ states.counter.days_without_rain.attributes.icon }}"
      entity: counter.days_without_rain
      tap_action:
        action: navigate
        navigation_path: weather

  - type: conditional
    conditions:
      - condition: numeric_state
        entity: sensor.outdoor_temp
        below: 32
    chip:
      type: template
      icon_color: grey
      content: Freezing
      icon: mdi:snowflake-thermometer
      entity: weather.weather_station
      tap_action:
        action: navigate
        navigation_path: weather

  - type: conditional
    conditions:
      - entity: binary_sensor.wind_chill_active
        state: 'on'
    chip:
      type: template
      icon_color: grey
      content: >-
        Wind Chill:
        {{states.sensor.wind_chill.state}}{{states.sensor.wind_chill.attributes.unit_of_measurement}}
      icon: "{{ states.sensor.wind_chill.attributes.icon }}"
      tap_action:
        action: navigate
        navigation_path: weather

  - type: conditional
    conditions:
      - entity: binary_sensor.heat_index_active
        state: 'on'
    chip:
      type: template
      icon_color: grey
      content: "Heat Index: {{states.sensor.heat_index.state}}F"
      icon: "{{states.sensor.heat_index.attributes.icon}}"
      tap_action:
        action: navigate
        navigation_path: weather

  - type: conditional
    conditions:
      - entity: binary_sensor.is_snow
        state: 'on'
    chip:
      type: template
      content: Snowing
      icon: mdi:weather-snowy
      tap_action:
        action: navigate
        navigation_path: weather

  - type: conditional
    conditions:
      - condition: and
        conditions:
          - condition: state
            entity: binary_sensor.is_rain_2
            state: 'on'
          - condition: state
            entity: switch.sprinklers
            state: 'off'
    chip:
      type: template
      content: Raining
      icon: mdi:weather-pouring
      tap_action:
        action: navigate
        navigation_path: weather

  - type: spacer

  - type: conditional
    conditions:
      - condition: state
        entity: alarm_control_panel.aarlo_garage
        state_not: disarmed
    chip:
      type: alarm-control-panel
      entity: alarm_control_panel.aarlo_garage
      tap_action:
        action: more-info
      hold_action:
        action: call-service
        service: alarm_control_panel.alarm_disarm
        target:
          entity_id: alarm_control_panel.aarlo_garage
      name: Garage Camera
      icon: mdi:cctv

  - type: conditional
    conditions:
      - entity: switch.back_yard_zone
        state_not: 'off'
    chip:
      type: template
      content: Backyard
      icon: mdi:sprinkler-variant
      tap_action:
        action: navigate
        navigation_path: garden

  - type: conditional
    conditions:
      - entity: switch.flower_beds_zone
        state_not: 'off'
    chip:
      type: template
      content: Flower Beds
      icon: mdi:sprinkler-variant
      tap_action:
        action: navigate
        navigation_path: garden

  - type: conditional
    conditions:
      - entity: switch.front_yard_zone
        state_not: 'off'
    chip:
      type: template
      content: Front Yard
      icon: mdi:sprinkler-variant
      tap_action:
        action: navigate
        navigation_path: garden

  - type: conditional
    conditions:
      - entity: switch.side_yard_zone
        state_not: 'off'
    chip:
      type: template
      content: Side Yards
      icon: mdi:sprinkler-variant
      tap_action:
        action: navigate
        navigation_path: garden

  - type: conditional
    conditions:
      - entity: switch.garden_watering
        state_not: 'off'
    chip:
      type: template
      content: Garden
      icon: mdi:sprinkler-variant
      tap_action:
        action: navigate
        navigation_path: garden

  - type: conditional
    conditions:
      - condition: numeric_state
        entity: sensor.monthly_water
        above: 7500
    chip:
      type: template
      content: High Monthly Water Usage
      icon: mdi:water-alert-outline
      tap_action:
        action: navigate
        navigation_path: utilities

  - type: conditional
    conditions:
      - condition: numeric_state
        entity: sensor.tank_utility_002a001d383334340d473130
        below: 50
    chip:
      type: template
      content: Refill House Tank
      icon: mdi:tanker-truck
      tap_action:
        action: navigate
        navigation_path: utilities

  - type: conditional
    conditions:
      - condition: numeric_state
        entity: sensor.grill_tank_percent
        below: 20
    chip:
      type: template
      content: Refill Grill Tank
      icon: mdi:propane-tank
      tap_action:
        action: navigate
        navigation_path: utilities

  - type: conditional
    conditions:
      - entity: input_select.mail_status
        state: "Mail Delivered"
    chip:
      type: template
      icon_color: grey
      content: Mail
      tap_action:
        action: navigate
        navigation_path: mailalert
      icon: mdi:mail

  - type: conditional
    conditions:
      - entity: input_boolean.package_present
        state: 'on'
    chip:
      type: template
      icon_color: grey
      content: Packages
      tap_action:
        action: navigate
        navigation_path: mailalert
      icon: mdi:package-check

  - type: conditional
    conditions:
      - entity: calendar.trash_collection
        state: 'on'
    chip:
      type: template
      icon_color: grey
      content: Trash Day
      icon: mdi:delete

  - type: conditional
    conditions:
      - entity: calendar.recycling_collection
        state: 'on'
    chip:
      type: template
      icon_color: grey
      content: Recycling Day
      icon: mdi:recycle-variant

  - type: conditional
    conditions:
      - entity: input_select.cat_litter_full_clean
        state_not: Done
    chip:
      type: template
      icon: mdi:cat
      icon_color: grey
      content: "Empty: {{ states.input_select.cat_litter_full_clean.state }}"
      tap_action:
        action: call-service
        service: input_select.select_option
        target:
          entity_id: input_select.cat_litter_full_clean
        data:
          option: Done

  - type: conditional
    conditions:
      - entity: input_boolean.vacation_mode
        state: 'on'
    chip:
      type: template
      icon_color: grey
      content: Vacation Mode On
      icon: mdi:airplane-check

  - type: conditional
    conditions:
      - entity: input_boolean.guest_mode
        state: 'on'
    chip:
      type: template
      icon_color: grey
      content: Guest Mode On
      icon: mdi:bed

  - type: conditional
    conditions:
      - entity: lawn_mower.philoctetes
        state: error
    chip:
      type: template
      icon_color: grey
      content: Philoctetes
      icon: mdi:alert
      tap_action:
        action: navigate
        navigation_path: outside

  - type: conditional
    conditions:
      - entity: vacuum.catbug
        state: error
    chip:
      type: template
      icon_color: grey
      content: Catbug
      icon: mdi:alert
      tap_action:
        action: navigate
        navigation_path: upmisc

  - type: conditional
    conditions:
      - entity: input_select.dishwasher_state
        state: Clean
    chip:
      type: template
      icon_color: grey
      content: Dishwasher Done
      icon: mdi:dishwasher
      tap_action:
        action: call-service
        service: input_select.select_option
        target:
          entity_id: input_select.dishwasher_state
        data:
          option: Dirty

  - type: spacer

  - type: conditional
    conditions:
      - condition: and
        conditions:
          - condition: state
            entity: plant.front_flowers
            state_not: ok
          - condition: state
            entity: input_boolean.soil_moisture_1_notify
            state: 'on'
    chip:
      type: template
      icon_color: grey
      icon: |-
        {%- set problem = state_attr('plant.front_flowers','problem') %}
        {% if 'moisture low' in problem %}
        mdi:watering-can-outline
        {% elif 'moisture high' in problem %}
        mdi:water-alert
        {% elif 'moisture unavailable' in problem %}
        mdi:water-off-outline
        {% elif 'temperature low' in problem %}
        mdi:snowflake-thermometer
        {% elif 'temperature high' in problem %}
        mdi:sun-thermometer-outline
        {% elif 'temperature unavailable' in problem %}
        mdi:thermometer-off
        {% elif 'conductivity low' in problem %}
        mdi:seed-plus-outline
        {% elif 'battery low' in problem%}
        mdi:battery-alert-variant-outline
        {% else %}
        mdi:flower-outline
        {% endif %}
      content: Front Planter
      entity: plant.front_flowers
      tap_action:
        action: navigate
        navigation_path: plant_flowers

  - type: conditional
    conditions:
      - condition: and
        conditions:
          - condition: state
            entity: plant.okra
            state_not: ok
          - condition: state
            entity: input_boolean.soil_moisture_2_notify
            state: 'on'
    chip:
      type: template
      icon_color: grey
      icon: |-
        {%- set problem = state_attr('plant.okra','problem') %}
        {% if 'moisture low' in problem %}
        mdi:watering-can-outline
        {% elif 'moisture high' in problem %}
        mdi:water-alert
        {% elif 'moisture unavailable' in problem %}
        mdi:water-off-outline
        {% elif 'temperature low' in problem %}
        mdi:snowflake-thermometer
        {% elif 'temperature high' in problem %}
        mdi:sun-thermometer-outline
        {% elif 'temperature unavailable' in problem %}
        mdi:thermometer-off
        {% elif 'conductivity low' in problem %}
        mdi:seed-plus-outline
        {% elif 'battery low' in problem%}
        mdi:battery-alert-variant-outline
        {% else %}
        mdi:chili-mild
        {% endif %}
      content: Okra
      entity: plant.okra
      tap_action:
        action: navigate
        navigation_path: plant_okra

  - type: conditional
    conditions:
      - condition: and
        conditions:
          - condition: state
            entity: plant.amaranth
            state_not: ok
          - condition: state
            entity: input_boolean.soil_moisture_3_notify
            state: 'on'
    chip:
      type: template
      entity: plant.amaranth
      icon_color: grey
      icon: |-
        {%- set problem = state_attr('plant.amaranth','problem') %}
        {% if 'moisture low' in problem %}
        mdi:watering-can-outline
        {% elif 'moisture high' in problem %}
        mdi:water-alert
        {% elif 'moisture unavailable' in problem %}
        mdi:water-off-outline
        {% elif 'temperature low' in problem %}
        mdi:snowflake-thermometer
        {% elif 'temperature high' in problem %}
        mdi:sun-thermometer-outline
        {% elif 'temperature unavailable' in problem %}
        mdi:thermometer-off
        {% elif 'conductivity low' in problem %}
        mdi:seen-plus-outline
        {% elif 'battery low' in problem%}
        mdi:battery-alert-variant-outline
        {% else %}
        mdi:leaf
        {% endif %}
      content: Amaranth
      tap_action:
        action: navigate
        navigation_path: plant_amaranth

  - type: conditional
    conditions:
      - condition: and
        conditions:
          - condition: state
            entity: plant.herbs
            state_not: ok
          - condition: state
            entity: input_boolean.soil_moisture_4_notify
            state: 'on'
    chip:
      type: template
      entity: plant.herbs
      icon_color: grey
      icon: |-
        {%- set problem = state_attr('plant.herbs','problem') %}
        {% if 'moisture low' in problem %}
        mdi:watering-can-outline
        {% elif 'moisture high' in problem %}
        mdi:water-alert
        {% elif 'moisture unavailable' in problem %}
        mdi:water-off-outline
        {% elif 'temperature low' in problem %}
        mdi:snowflake-thermometer
        {% elif 'temperature high' in problem %}
        mdi:sun-thermometer-outline
        {% elif 'temperature unavailable' in problem %}
        mdi:thermometer-off
        {% elif 'conductivity low' in problem %}
        mdi:seen-plus-outline
        {% elif 'battery low' in problem%}
        mdi:battery-alert-variant-outline
        {% else %}
        mdi:leaf
        {% endif %}
      content: Greenhouse
      tap_action:
        action: navigate
        navigation_path: plant_herbs

  - type: conditional
    conditions:
      - condition: and
        conditions:
          - condition: state
            entity: plant.cucumber
            state_not: ok
          - condition: state
            entity: input_boolean.soil_moisture_5_notify
            state: 'on'
    chip:
      type: template
      entity: plant.cucumber
      icon_color: grey
      icon: |-
        {%- set problem = state_attr('plant.cucumber','problem') %}
        {% if 'moisture low' in problem %}
        mdi:watering-can-outline
        {% elif 'moisture high' in problem %}
        mdi:water-alert
        {% elif 'moisture unavailable' in problem %}
        mdi:water-off-outline
        {% elif 'temperature low' in problem %}
        mdi:snowflake-thermometer
        {% elif 'temperature high' in problem %}
        mdi:sun-thermometer-outline
        {% elif 'temperature unavailable' in problem %}
        mdi:thermometer-off
        {% elif 'conductivity low' in problem %}
        mdi:seen-plus-outline
        {% elif 'battery low' in problem%}
        mdi:battery-alert-variant-outline
        {% else %}
        mdi:fruit-pear
        {% endif %}
      content: Cucumber
      tap_action:
        action: navigate
        navigation_path: plant_cucumber

  - type: conditional
    conditions:
      - condition: and
        conditions:
          - condition: state
            entity: plant.tomatoes
            state_not: ok
          - condition: state
            entity: input_boolean.soil_moisture_6_notify
            state: 'on'
    chip:
      type: template
      entity: plant.tomatoes
      icon_color: grey
      icon: |-
        {%- set problem = state_attr('plant.tomatoes','problem') %}
        {% if 'moisture low' in problem %}
        mdi:watering-can-outline
        {% elif 'moisture high' in problem %}
        mdi:water-alert
        {% elif 'moisture unavailable' in problem %}
        mdi:water-off-outline
        {% elif 'temperature low' in problem %}
        mdi:snowflake-thermometer
        {% elif 'temperature high' in problem %}
        mdi:sun-thermometer-outline
        {% elif 'temperature unavailable' in problem %}
        mdi:thermometer-off
        {% elif 'conductivity low' in problem %}
        mdi:seen-plus-outline
        {% elif 'battery low' in problem%}
        mdi:battery-alert-variant-outline
        {% else %}
        mdi:pig
        {% endif %}
      content: Tomatoes
      tap_action:
        action: navigate
        navigation_path: plant_tomatoes

  - type: conditional
    conditions:
      - condition: and
        conditions:
          - condition: state
            entity: plant.beans
            state_not: ok
          - condition: state
            entity: input_boolean.soil_moisture_7_notify
            state: 'on'
    chip:
      type: template
      entity: plant.beans
      icon_color: grey
      icon: |-
        {%- set problem = state_attr('plant.beans','problem') %}
        {% if 'moisture low' in problem %}
        mdi:watering-can-outline
        {% elif 'moisture high' in problem %}
        mdi:water-alert
        {% elif 'moisture unavailable' in problem %}
        mdi:water-off-outline
        {% elif 'temperature low' in problem %}
        mdi:snowflake-thermometer
        {% elif 'temperature high' in problem %}
        mdi:sun-thermometer-outline
        {% elif 'temperature unavailable' in problem %}
        mdi:thermometer-off
        {% elif 'conductivity low' in problem %}
        mdi:seen-plus-outline
        {% elif 'battery low' in problem%}
        mdi:battery-alert-variant-outline
        {% else %}
        mdi:leaf
        {% endif %}
      content: Beans
      tap_action:
        action: navigate
        navigation_path: plant_beans

  - type: conditional
    conditions:
      - condition: and
        conditions:
          - condition: state
            entity: plant.juniper
            state_not: ok
          - condition: state
            entity: input_boolean.soil_moisture_8_notify
            state: 'on'
    chip:
      type: template
      entity: plant.juniper
      icon_color: grey
      icon: |-
        {%- set problem = state_attr('plant.juniper','problem') %}
        {% if 'moisture low' in problem %}
        mdi:watering-can-outline
        {% elif 'moisture high' in problem %}
        mdi:water-alert
        {% elif 'moisture unavailable' in problem %}
        mdi:water-off-outline
        {% elif 'temperature low' in problem %}
        mdi:snowflake-thermometer
        {% elif 'temperature high' in problem %}
        mdi:sun-thermometer-outline
        {% elif 'temperature unavailable' in problem %}
        mdi:thermometer-off
        {% elif 'conductivity low' in problem %}
        mdi:seen-plus-outline
        {% elif 'battery low' in problem%}
        mdi:battery-alert-variant-outline
        {% else %}
        mdi:pine-tree-variant-outline
        {% endif %}
      content: Juniper
      tap_action:
        action: navigate
        navigation_path: plant_juniper

  - type: conditional
    conditions:
      - condition: and
        conditions:
          - condition: state
            entity: plant.camellia
            state_not: ok
          - condition: state
            entity: input_boolean.soil_moisture_9_notify
            state: 'on'
    chip:
      type: template
      entity: plant.camellia
      icon_color: grey
      icon: |-
        {%- set problem = state_attr('plant.camellia','problem') %}
        {% if 'moisture low' in problem %}
        mdi:watering-can-outline
        {% elif 'moisture high' in problem %}
        mdi:water-alert
        {% elif 'moisture unavailable' in problem %}
        mdi:water-off-outline
        {% elif 'temperature low' in problem %}
        mdi:snowflake-thermometer
        {% elif 'temperature high' in problem %}
        mdi:sun-thermometer-outline
        {% elif 'temperature unavailable' in problem %}
        mdi:thermometer-off
        {% elif 'conductivity low' in problem %}
        mdi:seed-plus-outline
        {% elif 'battery low' in problem%}
        mdi:battery-alert-variant-outline
        {% else %}
        mdi:flower
        {% endif %}
      content: Camellia
      tap_action:
        action: navigate
        navigation_path: plant_camellia

  - type: conditional
    conditions:
      - condition: and
        conditions:
          - condition: state
            entity: plant.steve
            state_not: ok
          - condition: state
            entity: input_boolean.soil_moisture_10_notify
            state: 'on'
    chip:
      type: template
      entity: plant.steve
      icon_color: grey
      icon: |-
        {%- set problem = state_attr('plant.steve','problem') %}
        {% if 'moisture low' in problem %}
        mdi:watering-can-outline
        {% elif 'moisture high' in problem %}
        mdi:water-alert
        {% elif 'moisture unavailable' in problem %}
        mdi:water-off-outline
        {% elif 'temperature low' in problem %}
        mdi:snowflake-thermometer
        {% elif 'temperature high' in problem %}
        mdi:sun-thermometer-outline
        {% elif 'temperature unavailable' in problem %}
        mdi:thermometer-off
        {% elif 'conductivity low' in problem %}
        mdi:seed-plus-outline
        {% elif 'battery low' in problem%}
        mdi:battery-alert-variant-outline
        {% else %}
        mdi:pine-tree-variant-outline
        {% endif %}
      content: Steve
      tap_action:
        action: navigate
        navigation_path: plant_steve

  - type: conditional
    conditions:
      - condition: and
        conditions:
          - condition: state
            entity: plant.lettuce
            state_not: ok
          - condition: state
            entity: input_boolean.soil_moisture_11_notify
            state: 'on'
    chip:
      type: template
      entity: plant.lettuce
      icon_color: grey
      icon: |-
        {%- set problem = state_attr('plant.lettuce','problem') %}
        {% if 'moisture low' in problem %}
        mdi:watering-can-outline
        {% elif 'moisture high' in problem %}
        mdi:water-alert
        {% elif 'moisture unavailable' in problem %}
        mdi:water-off-outline
        {% elif 'temperature low' in problem %}
        mdi:snowflake-thermometer
        {% elif 'temperature high' in problem %}
        mdi:sun-thermometer-outline
        {% elif 'temperature unavailable' in problem %}
        mdi:thermometer-off
        {% elif 'conductivity low' in problem %}
        mdi:seed-plus-outline
        {% elif 'battery low' in problem%}
        mdi:battery-alert-variant-outline
        {% else %}
        mdi:leaf
        {% endif %}
      content: Lettuce
      tap_action:
        action: navigate
        navigation_path: plant_lettuce

  - type: conditional
    conditions:
      - condition: and
        conditions:
          - condition: state
            entity: plant.mums
            state_not: ok
          - condition: state
            entity: input_boolean.soil_moisture_12_notify
            state: 'on'
    chip:
      type: template
      entity: plant.mums
      icon_color: grey
      icon: |-
        {%- set problem = state_attr('plant.mums','problem') %}
        {% if 'moisture low' in problem %}
        mdi:watering-can-outline
        {% elif 'moisture high' in problem %}
        mdi:water-alert
        {% elif 'moisture unavailable' in problem %}
        mdi:water-off-outline
        {% elif 'temperature low' in problem %}
        mdi:snowflake-thermometer
        {% elif 'temperature high' in problem %}
        mdi:sun-thermometer-outline
        {% elif 'temperature unavailable' in problem %}
        mdi:thermometer-off
        {% elif 'conductivity low' in problem %}
        mdi:seed-plus-outline
        {% elif 'battery low' in problem%}
        mdi:battery-alert-variant-outline
        {% else %}
        mdi:fruit-grapes
        {% endif %}
      content: mums
      tap_action:
        action: navigate
        navigation_path: plant_mums

  - type: conditional
    conditions:
      - condition: and
        conditions:
          - condition: state
            entity: plant.japanese_maple
            state_not: ok
          - condition: state
            entity: input_boolean.soil_moisture_13_notify
            state: 'on'
    chip:
      type: template
      entity: plant.japanese_maple
      icon_color: grey
      icon: |-
        {%- set problem = state_attr('plant.japanese_maple','problem') %}
        {% if 'moisture low' in problem %}
        mdi:watering-can-outline
        {% elif 'moisture high' in problem %}
        mdi:water-alert
        {% elif 'moisture unavailable' in problem %}
        mdi:water-off-outline
        {% elif 'temperature low' in problem %}
        mdi:snowflake-thermometer
        {% elif 'temperature high' in problem %}
        mdi:sun-thermometer-outline
        {% elif 'temperature unavailable' in problem %}
        mdi:thermometer-off
        {% elif 'conductivity low' in problem %}
        mdi:seed-plus-outline
        {% elif 'battery low' in problem%}
        mdi:battery-alert-variant-outline
        {% else %}
        mdi:leaf-maple
        {% endif %}
      content: Japanese Maple
      tap_action:
        action: navigate
        navigation_path: plant_japanese_maple

  - type: conditional
    conditions:
      - condition: and
        conditions:
          - condition: state
            entity: plant.fairy_washboard
            state_not: ok
          - condition: state
            entity: input_boolean.soil_moisture_14_notify
            state: 'on'
    chip:
      type: template
      entity: plant.fairy_washboard
      icon_color: grey
      icon: |-
        {%- set problem = state_attr('plant.fairy_washboard','problem') %}
        {% if 'moisture low' in problem %}
        mdi:watering-can-outline
        {% elif 'moisture high' in problem %}
        mdi:water-alert
        {% elif 'moisture unavailable' in problem %}
        mdi:water-off-outline
        {% elif 'temperature low' in problem %}
        mdi:snowflake-thermometer
        {% elif 'temperature high' in problem %}
        mdi:sun-thermometer-outline
        {% elif 'temperature unavailable' in problem %}
        mdi:thermometer-off
        {% elif 'conductivity low' in problem %}
        mdi:seen-plus-outline
        {% elif 'battery low' in problem%}
        mdi:battery-alert-variant-outline
        {% else %}
        mdi:grass
        {% endif %}
      content: Fairy Washboard
      tap_action:
        action: navigate
        navigation_path: plant_fairy_washboard

  - type: conditional
    conditions:
      - condition: and
        conditions:
          - condition: state
            entity: plant.carrots
            state_not: ok
          - condition: state
            entity: input_boolean.soil_moisture_15_notify
            state: 'on'
    chip:
      type: template
      entity: plant.carrots
      icon_color: grey
      icon: |-
        {%- set problem = state_attr('plant.carrots','problem') %}
        {% if 'moisture low' in problem %}
        mdi:watering-can-outline
        {% elif 'moisture high' in problem %}
        mdi:water-alert
        {% elif 'moisture unavailable' in problem %}
        mdi:water-off-outline
        {% elif 'temperature low' in problem %}
        mdi:snowflake-thermometer
        {% elif 'temperature high' in problem %}
        mdi:sun-thermometer-outline
        {% elif 'temperature unavailable' in problem %}
        mdi:thermometer-off
        {% elif 'conductivity low' in problem %}
        mdi:seen-plus-outline
        {% elif 'battery low' in problem%}
        mdi:battery-alert-variant-outline
        {% else %}
        mdi:carrot
        {% endif %}
      content: Carrots
      tap_action:
        action: navigate
        navigation_path: plant_carrots


  - type: conditional
    conditions:
      - condition: and
        conditions:
          - condition: state
            entity: plant.garlic
            state_not: ok
          - condition: state
            entity: input_boolean.soil_moisture_16_notify
            state: 'on'
    chip:
      type: template
      entity: plant.garlic
      icon_color: grey
      icon: |-
        {%- set problem = state_attr('plant.garlic','problem') %}
        {% if 'moisture low' in problem %}
        mdi:watering-can-outline
        {% elif 'moisture high' in problem %}
        mdi:water-alert
        {% elif 'moisture unavailable' in problem %}
        mdi:water-off-outline
        {% elif 'temperature low' in problem %}
        mdi:snowflake-thermometer
        {% elif 'temperature high' in problem %}
        mdi:sun-thermometer-outline
        {% elif 'temperature unavailable' in problem %}
        mdi:thermometer-off
        {% elif 'conductivity low' in problem %}
        mdi:seed-plus-outline
        {% elif 'battery low' in problem%}
        mdi:battery-alert-variant-outline
        {% else %}
        mdi:leaf
        {% endif %}
      content: Garlic
      tap_action:
        action: navigate
        navigation_path: plant_garlic

  - type: conditional
    conditions:
      - condition: and
        conditions:
          - condition: state
            entity: plant.blackberries
            state_not: ok
          - condition: state
            entity: input_boolean.soil_moisture_17_notify
            state: 'on'
    chip:
      type: template
      icon_color: grey
      icon: |-
        {%- set problem = state_attr('plant.blackberries','problem') %}
        {% if 'moisture low' in problem %}
        mdi:watering-can-outline
        {% elif 'moisture high' in problem %}
        mdi:water-alert
        {% elif 'moisture unavailable' in problem %}
        mdi:water-off-outline
        {% elif 'temperature low' in problem %}
        mdi:snowflake-thermometer
        {% elif 'temperature high' in problem %}
        mdi:sun-thermometer-outline
        {% elif 'temperature unavailable' in problem %}
        mdi:thermometer-off
        {% elif 'conductivity low' in problem %}
        mdi:seed-plus-outline
        {% elif 'battery low' in problem%}
        mdi:battery-alert-variant-outline
        {% else %}
        mdi:fruit-grapes
        {% endif %}
      content: Blackberries
      entity: plant.blackberries
      tap_action:
        action: navigate
        navigation_path: plant_blackberries

  - type: conditional
    conditions:
      - condition: and
        conditions:
          - condition: state
            entity: plant.pineapples
            state_not: ok
          - condition: state
            entity: input_boolean.soil_moisture_18_notify
            state: 'on'
    chip:
      type: template
      entity: plant.pineapples
      icon_color: grey
      icon: |-
        {%- set problem = state_attr('plant.pineapples','problem') %}
        {% if 'moisture low' in problem %}
        mdi:watering-can-outline
        {% elif 'moisture high' in problem %}
        mdi:water-alert
        {% elif 'moisture unavailable' in problem %}
        mdi:water-off-outline
        {% elif 'temperature low' in problem %}
        mdi:snowflake-thermometer
        {% elif 'temperature high' in problem %}
        mdi:sun-thermometer-outline
        {% elif 'temperature unavailable' in problem %}
        mdi:thermometer-off
        {% elif 'conductivity low' in problem %}
        mdi:seed-plus-outline
        {% elif 'battery low' in problem%}
        mdi:battery-alert-variant-outline
        {% else %}
        mdi:fruit-pineapple
        {% endif %}
      content: Pineapple Pots
      tap_action:
        action: navigate
        navigation_path: plant_pineapple

  - type: conditional
    conditions:
      - condition: and
        conditions:
          - condition: state
            entity: plant.japanese_holly
            state_not: ok
          - condition: state
            entity: input_boolean.soil_moisture_19_notify
            state: 'on'
    chip:
      type: template
      entity: plant.japanese_holly
      icon_color: grey
      icon: |-
        {%- set problem = state_attr('plant.japanese_holly','problem') %}
        {% if 'moisture low' in problem %}
        mdi:watering-can-outline
        {% elif 'moisture high' in problem %}
        mdi:water-alert
        {% elif 'moisture unavailable' in problem %}
        mdi:water-off-outline
        {% elif 'temperature low' in problem %}
        mdi:snowflake-thermometer
        {% elif 'temperature high' in problem %}
        mdi:sun-thermometer-outline
        {% elif 'temperature unavailable' in problem %}
        mdi:thermometer-off
        {% elif 'conductivity low' in problem %}
        mdi:seen-plus-outline
        {% elif 'battery low' in problem%}
        mdi:battery-alert-variant-outline
        {% else %}
        mdi:fruit-pineapple
        {% endif %}
      content: Japanese Holly
      tap_action:
        action: navigate
        navigation_path: plant_japanese_holly

  - type: conditional
    conditions:
      - condition: and
        conditions:
          - condition: state
            entity: plant.holly
            state_not: ok
          - condition: state
            entity: input_boolean.soil_moisture_20_notify
            state: 'on'
    chip:
      type: template
      entity: plant.holly
      icon_color: grey
      icon: |-
        {%- set problem = state_attr('plant.holly','problem') %}
        {% if 'moisture low' in problem %}
        mdi:watering-can-outline
        {% elif 'moisture high' in problem %}
        mdi:water-alert
        {% elif 'moisture unavailable' in problem %}
        mdi:water-off-outline
        {% elif 'temperature low' in problem %}
        mdi:snowflake-thermometer
        {% elif 'temperature high' in problem %}
        mdi:sun-thermometer-outline
        {% elif 'temperature unavailable' in problem %}
        mdi:thermometer-off
        {% elif 'conductivity low' in problem %}
        mdi:seen-plus-outline
        {% elif 'battery low' in problem%}
        mdi:battery-alert-variant-outline
        {% else %}
        mdi:fruit-pineapple
        {% endif %}
      content: Holly
      tap_action:
        action: navigate
        navigation_path: plant_holly
