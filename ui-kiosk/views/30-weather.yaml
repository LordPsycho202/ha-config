theme: Backend-selected
title: Weather
path: weather
icon: mdi:weather-night-partly-cloudy
type: custom:grid-layout
layout:
  grid-template-columns: 8% 23% minmax(auto,38%) 25%
  grid-template-rows: 10% minmax(auto,80%) 10%
  grid-template-areas: |
    "headerL headerC headerR headerR"
    "sidebar sidebar2 main aux"
    "footer footer footer footer"
  mediaquery:
    '(max-width: 800px)':
      grid-template-columns: 100%
      grid-template-rows: auto
      grid-template-areas: |
        "headerC"
        "headerR"
        "main"
        "aux"
        "sidebar2"
        "footer"
visible:
  - user: 829c75b162794808a699871056da2b93
badges: []
cards:
  - !include ../includes/headerL.yaml
  - !include ../includes/headerC.yaml
  - !include ../includes/headerR.yaml

  - type: vertical-stack
    cards:
      - type: custom:button-card
        name: Forecast Modeling
        style: |
          ha-card {
            display: flex;
            position: relative;
            margin: 0;
            overflow: visible;
            border-radius: 0 10px 10px 0;
            height: 40px;
            width: 9.5rem;
            min-width: 9.5rem;
            min-height: 40px;
            background-color: #79D;
            border-right: 28px solid #79D;
            border-left: 18px solid #79D;
            border-top: #111;
            border-bottom: #111;
          }
          ha-card::after {
            content: "";
            background-color: #111;
            display: block;
            width: 10px;
            height: 50px;
            position: absolute;
            top: 0;
            right: 0;
            overflow: hidden;
          }

          ha-card div.ellipsis {
            position: absolute;
            left: 10px;
            background-color: #79D;
            height: 40px;
            overflow: visible;
            padding: 5px;
            font-size: 1.5rem;
            font-family: Antonio;
            line-height: 40px;
            text-transform: uppercase;
            color: #111;
          }
          ha-card.button-card-main {
            padding: 0 0 !important;
          }
      - show_current: false
        show_forecast: true
        type: weather-forecast
        entity: weather.kwdr_daynight
        theme: ios-dark-mode
        secondary_info_attribute: pressure
        card_mod:
          style: |
            ha-card {
              height:215px !important;
            }
      - camera_view: auto
        type: picture-glance
        image: https://511ga.org/map/Cctv/JKSN-CAM-013--1
        entities:
          - entity: sensor.waze_travel_time
          - entity: sensor.jennifer_time_to_home
      - type: horizontal-stack
        cards:
          - type: custom:mushroom-template-card
            primary: >+
              {% set suffix='' %}

              {% set hour =
              as_timestamp(state_attr('weather.kwdr_daynight','forecast').1.datetime)
              | timestamp_custom('%H') %} 

              {% if hour | int >= 18 %}
                {% set suffix="night" %}
              {% endif %}


              {{
              as_timestamp(state_attr('weather.kwdr_daynight','forecast').1.datetime)
              | timestamp_custom('%A') }} {{suffix}}

            secondary: >-
              {{state_attr('weather.kwdr_daynight','forecast').1.detailed_description}}
            icon: >-
              {% if
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'sunny' %} mdi:weather-sunny

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'clear' and
              not(states.weather.kwdr_daynight.attributes.forecast[3].daytime)
              %} mdi:moon-waning-crescent

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'clear' and
              states.weather.kwdr_daynight.attributes.forecast[3].daytime %}
              mdi:weather-sunny

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'mostly-sunny' %} mdi:weather-sunny

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'partly-cloudy' and
              states.weather.kwdr_daynight.attributes.forecast[3].daytime %}
              mdi:weather-partly-cloudy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'partly-cloudy' and
              not(states.weather.kwdr_daynight.attributes.forecast[3].daytime)%}
              mdi:weather-night-partly-cloudy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'partlycloudy' and
              states.weather.kwdr_daynight.attributes.forecast[3].daytime %}
              mdi:weather-partly-cloudy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'partlycloudy' and
              not(states.weather.kwdr_daynight.attributes.forecast[3].daytime)%}
              mdi:weather-night-partly-cloudy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'cloudy' %} mdi:weather-cloudy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'light-rain' %} mdi:weather-partly-rainy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'wind' %} mdi:weather-windy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'windy' %} mdi:weather-windy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'dust' %} mdi:weather-dust

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'fog' %} mdi:weather-fog

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'showers' %} mdi:weather-partly-rainy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'rain' %} mdi:weather-rainy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'rainy' %} mdi:weather-rainy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'storm' %} mdi:weather-lightning-rainy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'stormy' %} mdi:weather-lightning-rainy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'light-showers' %} mdi:weather-partly-rainy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'light-shower' %} mdi:weather-partly-rainy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'heavy-showers' %} mdi:weather-rainy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'heavy-shower' %} mdi:weather-rainy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'clear-day' %} mdi:weather-sunny

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'clear-night' %} mdi:moon-waning-crescent

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'partly-cloudy-day' %} mdi:weather-partly-cloudy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'partly-cloudy-night' %}
              mdi:weather-night-partly-cloudy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'hail' %} mdi:weather-hail

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'lightning' %} mdi:weather-lightning

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'thunderstorm' %} mdi:weather-lightning-rainy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[1].condition
              | string == 'lightning-rainy' %} mdi:weather-lightning-rainy

              {% else %} mdi:exclamation-thick

              {% endif %}
            fill_container: false
            multiline_secondary: true
            icon_color: >-
              {% if
              states.weather.kwdr_daynight.attributes.forecast[1].daytime %}
                yellow
              {% else %}
                blue
              {% endif %}
      - type: horizontal-stack
        cards:
          - type: custom:mushroom-template-card
            primary: >+
              {% set suffix='' %}

              {% set hour =
              as_timestamp(state_attr('weather.kwdr_daynight','forecast').2.datetime)
              | timestamp_custom('%H') %} 

              {% if hour | int >= 18 %}
                {% set suffix="night" %}
              {% endif %}


              {{
              as_timestamp(state_attr('weather.kwdr_daynight','forecast').2.datetime)
              | timestamp_custom('%A') }} {{suffix}}

            secondary: >-
              {{state_attr('weather.kwdr_daynight','forecast').2.detailed_description}}
            icon: >-
              {% if
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'sunny' %} mdi:weather-sunny

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'clear' and
              not(states.weather.kwdr_daynight.attributes.forecast[3].daytime)
              %} mdi:moon-waning-crescent

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'clear' and
              states.weather.kwdr_daynight.attributes.forecast[3].daytime %}
              mdi:weather-sunny

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'mostly-sunny' %} mdi:weather-sunny

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'partly-cloudy' and
              states.weather.kwdr_daynight.attributes.forecast[3].daytime %}
              mdi:weather-partly-cloudy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'partly-cloudy' and
              not(states.weather.kwdr_daynight.attributes.forecast[3].daytime)%}
              mdi:weather-night-partly-cloudy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'partlycloudy' and
              states.weather.kwdr_daynight.attributes.forecast[3].daytime %}
              mdi:weather-partly-cloudy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'partlycloudy' and
              not(states.weather.kwdr_daynight.attributes.forecast[3].daytime)%}
              mdi:weather-night-partly-cloudy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'cloudy' %} mdi:weather-cloudy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'light-rain' %} mdi:weather-partly-rainy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'wind' %} mdi:weather-windy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'windy' %} mdi:weather-windy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'dust' %} mdi:weather-dust

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'fog' %} mdi:weather-fog

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'showers' %} mdi:weather-partly-rainy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'rain' %} mdi:weather-rainy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'rainy' %} mdi:weather-rainy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'storm' %} mdi:weather-lightning-rainy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'stormy' %} mdi:weather-lightning-rainy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'light-showers' %} mdi:weather-partly-rainy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'light-shower' %} mdi:weather-partly-rainy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'heavy-showers' %} mdi:weather-rainy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'heavy-shower' %} mdi:weather-rainy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'clear-day' %} mdi:weather-sunny

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'clear-night' %} mdi:moon-waning-crescent

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'partly-cloudy-day' %} mdi:weather-partly-cloudy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'partly-cloudy-night' %}
              mdi:weather-night-partly-cloudy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'hail' %} mdi:weather-hail

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'lightning' %} mdi:weather-lightning

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'thunderstorm' %} mdi:weather-lightning-rainy

              {% elif
              states.weather.kwdr_daynight.attributes.forecast[2].condition
              | string == 'lightning-rainy' %} mdi:weather-lightning-rainy

              {% else %} mdi:exclamation-thick

              {% endif %}
            fill_container: false
            multiline_secondary: true
            icon_color: >-
              {% if
              states.weather.kwdr_daynight.attributes.forecast[2].daytime %}
                yellow
              {% else %}
                blue
              {% endif %}
      - type: custom:mushroom-template-card
        primary: >+
          {% set suffix='' %}

          {% set hour =
          as_timestamp(state_attr('weather.kwdr_daynight','forecast').3.datetime)
          | timestamp_custom('%H') %} 

          {% if hour | int >= 18 %}
            {% set suffix="night" %}
          {% endif %}


          {{
          as_timestamp(state_attr('weather.kwdr_daynight','forecast').3.datetime)
          | timestamp_custom('%A') }} {{suffix}}

        secondary: >-
          {{state_attr('weather.kwdr_daynight','forecast').3.detailed_description}}
        icon: >
          {% if
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'sunny' %} mdi:weather-sunny

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'clear' and
          not(states.weather.kwdr_daynight.attributes.forecast[3].daytime)
          %} mdi:moon-waning-crescent

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'clear' and
          states.weather.kwdr_daynight.attributes.forecast[3].daytime %}
          mdi:weather-sunny

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'mostly-sunny' %} mdi:weather-sunny

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'partly-cloudy' and
          states.weather.kwdr_daynight.attributes.forecast[3].daytime %}
          mdi:weather-partly-cloudy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'partly-cloudy' and
          not(states.weather.kwdr_daynight.attributes.forecast[3].daytime)%}
          mdi:weather-night-partly-cloudy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'partlycloudy' and
          states.weather.kwdr_daynight.attributes.forecast[3].daytime %}
          mdi:weather-partly-cloudy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'partlycloudy' and
          not(states.weather.kwdr_daynight.attributes.forecast[3].daytime)%}
          mdi:weather-night-partly-cloudy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'cloudy' %} mdi:weather-cloudy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'light-rain' %} mdi:weather-partly-rainy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'wind' %} mdi:weather-windy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'windy' %} mdi:weather-windy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'dust' %} mdi:weather-dust

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'fog' %} mdi:weather-fog

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'showers' %} mdi:weather-partly-rainy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'rain' %} mdi:weather-rainy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'rainy' %} mdi:weather-rainy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'storm' %} mdi:weather-lightning-rainy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'stormy' %} mdi:weather-lightning-rainy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'light-showers' %} mdi:weather-partly-rainy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'light-shower' %} mdi:weather-partly-rainy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'heavy-showers' %} mdi:weather-rainy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'heavy-shower' %} mdi:weather-rainy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'clear-day' %} mdi:weather-sunny

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'clear-night' %} mdi:moon-waning-crescent

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'partly-cloudy-day' %} mdi:weather-partly-cloudy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'partly-cloudy-night' %} mdi:weather-night-partly-cloudy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'hail' %} mdi:weather-hail

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'lightning' %} mdi:weather-lightning

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'thunderstorm' %} mdi:weather-lightning-rainy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[3].condition |
          string == 'lightning-rainy' %} mdi:weather-lightning-rainy

          {% else %} mdi:exclamation-thick

          {% endif %}
        fill_container: false
        multiline_secondary: true
        icon_color: >-
          {% if states.weather.kwdr_daynight.attributes.forecast[3].daytime
          %}
            yellow
          {% else %}
            blue
          {% endif %}
      - type: custom:mushroom-template-card
        primary: >+
          {% set suffix='' %}

          {% set hour =
          as_timestamp(state_attr('weather.kwdr_daynight','forecast').4.datetime)
          | timestamp_custom('%H') %} 

          {% if hour | int >= 18 %}
            {% set suffix="night" %}
          {% endif %}


          {{
          as_timestamp(state_attr('weather.kwdr_daynight','forecast').4.datetime)
          | timestamp_custom('%A') }} {{suffix}}

        secondary: >-
          {{state_attr('weather.kwdr_daynight','forecast').4.detailed_description}}
        icon: >
          {% if
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'sunny' %} mdi:weather-sunny

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'clear' and
          not(states.weather.kwdr_daynight.attributes.forecast[4].daytime)
          %} mdi:moon-waning-crescent

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'clear' and
          states.weather.kwdr_daynight.attributes.forecast[4].daytime %}
          mdi:weather-sunny

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'mostly-sunny' %} mdi:weather-sunny

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'partly-cloudy' and
          states.weather.kwdr_daynight.attributes.forecast[4].daytime %}
          mdi:weather-partly-cloudy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'partly-cloudy' and
          not(states.weather.kwdr_daynight.attributes.forecast[4].daytime)%}
          mdi:weather-night-partly-cloudy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'partlycloudy' and
          states.weather.kwdr_daynight.attributes.forecast[4].daytime %}
          mdi:weather-partly-cloudy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'partlycloudy' and
          not(states.weather.kwdr_daynight.attributes.forecast[4].daytime)%}
          mdi:weather-night-partly-cloudy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'cloudy' %} mdi:weather-cloudy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'light-rain' %} mdi:weather-partly-rainy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'wind' %} mdi:weather-windy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'windy' %} mdi:weather-windy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'dust' %} mdi:weather-dust

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'fog' %} mdi:weather-fog

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'showers' %} mdi:weather-partly-rainy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'rain' %} mdi:weather-rainy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'rainy' %} mdi:weather-rainy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'storm' %} mdi:weather-lightning-rainy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'stormy' %} mdi:weather-lightning-rainy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'light-showers' %} mdi:weather-partly-rainy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'light-shower' %} mdi:weather-partly-rainy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'heavy-showers' %} mdi:weather-rainy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'heavy-shower' %} mdi:weather-rainy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'clear-day' %} mdi:weather-sunny

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'clear-night' %} mdi:moon-waning-crescent

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'partly-cloudy-day' %} mdi:weather-partly-cloudy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'partly-cloudy-night' %} mdi:weather-night-partly-cloudy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'hail' %} mdi:weather-hail

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'lightning' %} mdi:weather-lightning

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'thunderstorm' %} mdi:weather-lightning-rainy

          {% elif
          states.weather.kwdr_daynight.attributes.forecast[4].condition |
          string == 'lightning-rainy' %} mdi:weather-lightning-rainy

          {% else %} mdi:exclamation-thick

          {% endif %}
        fill_container: false
        multiline_secondary: true
        icon_color: >-
          {% if states.weather.kwdr_daynight.attributes.forecast[4].daytime
          %}
            yellow
          {% else %}
            blue
          {% endif %}
    view_layout:
      grid-area: aux
  - type: vertical-stack
    cards:
      - type: custom:button-card
        name: Sensors
        style: |
          ha-card {
            display: flex;
            position: relative;
            margin: 0;
            overflow: visible;
            border-radius: 0 0 0 0;
            height: 40px;
            width: 9.5rem;
            min-width: 9.5rem;
            min-height: 40px;
            background-color: #79D;
            border-right: 28px solid #79D;
            border-left: 18px solid #79D;
            border-top: #111;
            border-bottom: #111;
          }
          ha-card::after {
            content: "";

            display: block;
            width: 10px;
            height: 50px;
            position: absolute;
            top: 0;
            right: 0;
            overflow: hidden;
          }

          ha-card div.ellipsis {
            position: absolute;
            left: 10px;
            background-color: #79D;
            height: 40px;
            overflow: visible;
            padding: 5px;
            font-size: 1.5rem;
            font-family: Antonio;
            line-height: 40px;
            text-transform: uppercase;
            color: #111;
          }
          ha-card.button-card-main {
            padding: 0 0 !important;
          }
      - type: custom:weather-radar-card
        card_title: Radar
        data_source: RainViewer-Original
        map_style: Voyager
        zoom_level: 8
        center_latitude: 34.0720728
        center_longitude: -83.6917093
        marker_latitude: 34.0720728
        marker_longitude: -83.6917093
        show_marker: true
        static_map: false
        show_scale: true
        show_range: true
        show_playback: true
        show_zoom: true
        square_map: true
        show_recenter: true
        frame_count: 5
        frame_delay: 1000
        restart_delay: 5000
        extra_labels: true
    view_layout:
      grid-area: main
  - type: vertical-stack
    cards:
      - !include ../includes/mailCluster.yaml
      - type: custom:button-card
        name: Conditions
        style: |
          ha-card {
            display: flex;
            position: relative;
            margin: 0;
            overflow: visible;
            border-radius: 10px 10px 10px 10px;
            height: 40px;
            width: 9.5rem;
            min-width: 9.5rem;
            min-height: 40px;
            background-color: #79D;
            border-right: 28px solid #79D;
            border-left: 18px solid #79D;
            border-top: 0;
            border-bottom: 0;
          }
          ha-card div.ellipsis {
            position: absolute;
            left: 10px;
            background-color: #79D;
            height: 40px;
            overflow: visible;
            padding: 5px;
            font-size: 1.5rem;
            font-family: Antonio;
            line-height: 40px;
            text-transform: uppercase;
            color: #111;
          }
          ha-card.button-card-main {
            padding: 0 0 !important;
          }
          ha-card::after {
            content: "";
            background-color: #111;
            display: block;
            width: 10px;
            height: 50px;
            position: absolute;
            top: 0;
            overflow: hidden;
            right: 0;
            bottom: 1.5rem;

          }
      - type: horizontal-stack
        cards:
          - type: custom:mushroom-entity-card
            entity: sensor.outside_temp
            name: Temp
          - type: custom:mushroom-entity-card
            entity: sensor.outdoor_humidity
            name: '%RH'
      - type: horizontal-stack
        cards:
          - type: custom:mushroom-template-card
            entity: sensor.wind_acurite_5n1_b
            icon: mdi:windsock
            icon_color: |-
              {% if states.sensor.wind_acurite_5n1_b.state | float < 15 %}
                blue
              {% else %}
                red
              {% endif %}
            primary: Wind
            secondary: >-
              {{states.sensor.wind_acurite_5n1_b.state | float }}
              {{states.sensor.wind_acurite_5n1_b.attributes.unit_of_measurement
              }} {{states.sensor.wind_dir_acurite_5n1_b.attributes.compass |
              string }}
            tap_action:
              action: more-info
          - type: custom:mushroom-entity-card
            entity: sensor.office_pressure
            name: Pressure
      - type: custom:button-card
        name: Storm Conditions
        style: |
          ha-card {
            display: flex;
            position: relative;
            margin: 0;
            overflow: visible;
            border-radius: 10px 10px 10px 10px;
            height: 40px;
            width: 9.5rem;
            min-width: 9.5rem;
            min-height: 40px;
            background-color: #455580;
            border-right: 28px solid #455580;
            border-left: 18px solid #455580;
            border-top: 0;
            border-bottom: 0;
          }
          ha-card div.ellipsis {
            position: absolute;
            left: 10px;
            background-color: #455580;
            height: 40px;
            overflow: visible;
            padding: 5px;
            font-size: 1.5rem;
            font-family: Antonio;
            line-height: 40px;
            text-transform: uppercase;
            color: #111;
          }
          ha-card.button-card-main {
            padding: 0 0 !important;
          }
          ha-card::after {
            content: "";
            background-color: #111;
            display: block;
            width: 10px;
            height: 50px;
            position: absolute;
            top: 0;
            overflow: hidden;
            right: 0;
            bottom: 1.5rem;

          }
      - type: horizontal-stack
        cards:
          - type: custom:mushroom-entity-card
            entity: sensor.rain_daily
            name: Rain Total (Today)
            icon: mdi:weather-pouring
          - type: custom:mushroom-entity-card
            entity: weather.kwdr_daynight
            name: Conditions
      - type: horizontal-stack
        cards:
          - type: custom:mushroom-entity-card
            entity: sensor.rainfall
            name: Rainfall Rate
          - type: custom:mushroom-entity-card
            entity: sensor.lightning_acurite_6045m
            name: Lightning
      - type: custom:button-card
        name: Solar Timings
        style: |
          ha-card {
            display: flex;
            position: relative;
            margin: 0;
            overflow: visible;
            border-radius: 10px 10px 10px 10px;
            height: 40px;
            width: 9.5rem;
            min-width: 9.5rem;
            min-height: 40px;
            background-color: #6CF;
            border-right: 28px solid #6CF;
            border-left: 18px solid #6CF;
            border-top: 0;
            border-bottom: 0;
          }
          ha-card div.ellipsis {
            position: absolute;
            left: 10px;
            background-color: #6CF;
            height: 40px;
            overflow: visible;
            padding: 5px;
            font-size: 1.5rem;
            font-family: Antonio;
            line-height: 40px;
            text-transform: uppercase;
            color: #111;
          }
          ha-card.button-card-main {
            padding: 0 0 !important;
          }
          ha-card::after {
            content: "";
            background-color: #111;
            display: block;
            width: 10px;
            height: 50px;
            position: absolute;
            top: 0;
            overflow: hidden;
            right: 0;
            bottom: 1.5rem;

          }
      - type: horizontal-stack
        cards:
          - type: custom:mushroom-entity-card
            entity: sensor.next_sunrise
          - type: custom:mushroom-entity-card
            entity: sensor.next_sunset
    view_layout:
      grid-area: sidebar2
  - type: vertical-stack
    cards:
      - type: custom:stack-in-card
        keep:
          background: true
        card_mod:
          style: |
            ha-card.type-custom-stack-in-card {
              border-radius: 0;
              border: 0;
            }
        cards:
          - type: custom:button-card
            style: |
              ha-card.button-card-main {
                display: flex;
                position: relative;
                margin: 0;
                overflow: visible;
                border-radius: 35px 0 0 0 !important;
                height: 40px;
                width: 9.5rem;
                min-width: 9.5rem;
                min-height: 40px;
                background-color: #58e;
                border-right: 28px solid #58e;
                border-left: 18px solid #58e;
                border-top-left-radius: 3.75rem;
              }
              ha-card.button-card-main::after {
                right: 0;
                bottom: 1.5rem;
                border-top-left-radius: 35px;
              }
              ha-card.button-card-main div.ellipsis {
                position: absolute;
                left: 10px;
                background-color: #58e;
                height: 40px;
                overflow: visible;
                padding: 5px;
                font-size: 1.5rem;
                font-family: Antonio;
                line-height: 40px;
                text-transform: uppercase;
                color: #111;
              }
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                style: |
                  ha-card {
                    display: flex;
                    position: relative;
                    margin: 0;
                    overflow: visible;
                    border-radius: 0;
                    height: 277px;
                    width: 5.9rem;
                    min-width: 5.9rem;
                    min-height: 80px;
                    background-color: #58e;
                    border-right: 28px solid #58e;
                    border-left: 18px solid #58e;
                  }
                  ha-card div.ellipsis {
                    position: absolute;
                    left: 10px;
                    background-color: #58e;
                    height: 40px;
                    overflow: visible;
                    padding: 5px;
                    font-size: 1.5rem;
                    font-family: Antonio;
                    line-height: 80px;
                    text-transform: uppercase;
                    color: #111;
                  }
              - type: custom:button-card
                style: |

                  ha-card {
                    display: flex;
                    position: relative;
                    margin: 0;
                    overflow: visible;
                    border-radius: 0;
                    height: 277px;
                    width: 6rem;
                    min-width: 6.1rem;
                    min-height: 80px;
                    background-image: linear-gradient(to right, rgb(85, 136, 238) 50%, rgb(28, 28, 28) 50%);
                    border: #111;
                  }
                  ha-card div.vertical.no-icon.no-label.no-state {
                    background: #111;
                    border-radius: 30px 0 0 0;
                  }
                  ha-card div.ellipsis {
                    position: absolute;
                    left: 10px;
                    background-color: #111;
                    color: #FFF;
                    height: 40px;
                    overflow: visible;
                    padding: 5px;
                    font-size: 1.5rem;
                    font-family: Antonio;
                    line-height: 40px;
                    text-transform: uppercase;
                    color: #FFF;
                  }
                  ha-card.button-card-main {
                    padding: 0 0 !important;
                  }
      - type: custom:stack-in-card
        keep:
          background: true
        card_mod:
          style: |
            ha-card.type-custom-stack-in-card {
              border-radius: 0;
              border: 0;
            }
        mode: horizontal
        cards:
          - type: custom:button-card
            style: |
              ha-card.button-card-main {
                display: flex;
                position: relative;
                margin: 0;
                overflow: visible;
                border-radius: 0;
                height: 191px;
                min-height: 80px;
                background-color: #79D;
                border-right: 28px solid #79D;
                border-left: 18px solid #79D;
              }
              ha-card div.ellipsis {
                position: absolute;
                left: 10px;
                background-color: #111;
                overflow: visible;
                padding: 5px;
                font-size: 1.5rem;
                font-family: Antonio;
                line-height: 80px;
                text-transform: uppercase;
                color: #111;
              }
          - type: custom:button-card
            style: |
              ha-card {
                display: flex;
                position: relative;
                margin: 0;
                overflow: visible;
                border-radius: 0;
                height: 191px;
                width: 6rem;
                min-width: 6rem;
                min-height: 80px;
                background-color: #111;
                border: 0;
              }
              ha-card div.ellipsis {
                position: absolute;
                left: 10px;
                background-color: #111;
                color: #FFF;
                height: 191px;
                overflow: visible;
                padding: 5px;
                font-size: 1.5rem;
                font-family: Antonio;
                line-height: 80px;
                text-transform: uppercase;
                vertical-align: middle;
                color: #FFF;
              }
              ha-card.button-card-main {
                padding: 0 0 !important;
              }
      - type: custom:stack-in-card
        keep:
          background: true
        card_mod:
          style: |
            ha-card.type-custom-stack-in-card {
              border-radius: 0;
              border: 0;
            }
        mode: horizontal
        cards:
          - type: custom:button-card
            style: |
              ha-card.button-card-main {
                display: flex;
                position: relative;
                margin: 0;
                overflow: visible;
                border-radius: 0;
                height: 191px;
                min-height: 80px;
                background-color: #455580;
                border-right: 28px solid #455580;
                border-left: 18px solid #455580;
              }
              ha-card div.ellipsis {
                position: absolute;
                left: 10px;
                background-color: #58e;
                height: 40px;
                overflow: visible;
                padding: 5px;
                font-size: 1.5rem;
                font-family: Antonio;
                line-height: 80px;
                text-transform: uppercase;
                color: #111;
              }
          - type: custom:button-card
            style: |
              ha-card {
                display: flex;
                position: relative;
                margin: 0;
                overflow: visible;
                border-radius: 0;
                height: 191px;
                width: 6rem;
                min-width: 6rem;
                min-height: 80px;
                background-color: #111;
                border: 0;
              }
              ha-card div.ellipsis {
                position: absolute;
                left: 10px;
                background-color: #111;
                color: #FFF;
                height: 191px;
                overflow: visible;
                padding: 5px;
                font-size: 1.5rem;
                font-family: Antonio;
                line-height: 80px;
                text-transform: uppercase;
                vertical-align: middle;
                color: #FFF;
              }
              ha-card.button-card-main {
                padding: 0 0 !important;
              }
      - type: custom:stack-in-card
        keep:
          background: true
        card_mod:
          style: |
            ha-card.type-custom-stack-in-card {
              border-radius: 0;
              border: 0;
            }
        mode: horizontal
        cards:
          - type: custom:button-card
            style: |
              ha-card.button-card-main {
                display: flex;
                position: relative;
                margin: 0;
                overflow: visible;
                border-radius: 0;
                height: 191px;
                min-height: 80px;
                background-color: #6CF;
                border-right: 28px solid #6CF;
                border-left: 18px solid #6CF;
              }
              ha-card div.ellipsis {
                position: absolute;
                left: 10px;
                background-color: #58e;
                height: 40px;
                overflow: visible;
                padding: 5px;
                font-size: 1.5rem;
                font-family: Antonio;
                line-height: 80px;
                text-transform: uppercase;
                color: #111;
              }
          - type: custom:button-card
            style: |
              ha-card {
                display: flex;
                position: relative;
                margin: 0;
                overflow: visible;
                border-radius: 0;
                height: 191px;
                width: 6rem;
                min-width: 6rem;
                min-height: 80px;
                background-color: #111;
                border: 0;
              }
              ha-card div.ellipsis {
                position: absolute;
                left: 10px;
                background-color: #111;
                color: #FFF;
                height: 191px;
                overflow: visible;
                padding: 5px;
                font-size: 1.5rem;
                font-family: Antonio;
                line-height: 80px;
                text-transform: uppercase;
                vertical-align: middle;
                color: #FFF;
              }
              ha-card.button-card-main {
                padding: 0 0 !important;
              }
    view_layout:
      grid-area: sidebar