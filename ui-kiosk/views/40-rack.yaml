---
title: Rack
icon: "mdi:server"
theme: LCARS Modern
type: custom:grid-layout
layout:
  grid-template-columns: 350px 1200px 340px
  grid-template-rows: minmax(10%,auto) minmax(auto,60%) 10%
  grid-template-areas: |
    "headerL headerR headerR"
    "menu main aux"
    "sidebar main aux"
    "footer footer footer"
path: rack
badges: []
cards:
  - !include ../includes/headerL.yaml
  - !include ../includes/headerR.yaml
  - !include ../includes/menu.yaml
  - !include ../includes/footer.yaml

  - type: vertical-stack
    view_layout:
      grid-area: aux
    cards:
      - type: markdown
        content: '# Computer Rack Layout'
        card_mod:
          class: header-open
          style: |
            ha-card > * {
              font-family: Antonio
            }
      - type: picture
        image: /local/images/rack.png
        tap_action:
          action: none
        hold_action:
          action: none
      - type: markdown
        content: '# NAS Storage'
        card_mod:
          class: header-open
          style: |
            ha-card > * {
              font-family: Antonio
            }
      - type: custom:mushroom-template-card
        card_mod:
          class: button-large
        primary: >-
          {{ 100-(states('sensor.netshare_free')|float /
          (state_attr('sensor.netshare_free','Total GiB')|float)*100)|round}}% • {{
          states('sensor.netshare_free') | string }}
          {{state_attr('sensor.netshare_free','unit_of_measurement') }} Free • {% if
          states.binary_sensor.netshare_healthy.state == "on" %} Healthy {% else %}
          Unhealthy {% endif %}
        secondary: Network Share
        icon: mdi:folder-network-outline
        icon_color: >-
          {% if states.binary_sensor.netshare_healthy.state == "off" %}
          red
          {% elif 100-(states('sensor.netshare_free')|float /
          (state_attr('sensor.netshare_free','Total GiB')|float)*100)|round > 85 %}
          red
          {% elif 100-(states('sensor.netshare_free')|float /
          (state_attr('sensor.netshare_free','Total GiB')|float)*100)|round > 70 %}
          yellow
          {% else %}
          green
          {% endif %}
      - type: custom:mushroom-template-card
        card_mod:
          class: button-large
        primary: >-
           {% if states.binary_sensor.gitlab.state == "on" %} Healthy {% else %} Unhealthy {% endif %}
        secondary: Gitlab
        icon: mdi:server-network
        icon_color: >-
          {% if states.binary_sensor.gitlab.state == "off" %}
          red
          {% else %}
          green
          {% endif %}
      - type: custom:mushroom-template-card
        card_mod:
          class: button-large
        primary: >-
           {% if states.binary_sensor.plexserver.state == "on" %} Healthy {% else %} Unhealthy {% endif %}
        secondary: Plex
        icon: mdi:server-network
        icon_color: >-
          {% if states.binary_sensor.plexserver.state == "off" %}
          red
          {% else %}
          green
          {% endif %}
  - type: vertical-stack
    view_layout:
      grid-area: sidebar
      place-self: start stretch
    cards:
      - type: markdown
        content: '# Relays'
        card_mod:
          class: middle
          style: |
            ha-card > * {
              font-family: Antonio
            }
      - show_name: true
        show_icon: true
        type: button
        tap_action:
          action: more-info
        show_state: true
        hold_action:
          action: none
        entity: sensor.unifi_main_switch_uptime
        icon: mdi:lan
        card_mod:
          class: button-bullet
          style: |
            ha-card > * {
              font-family: Antonio
            }
      - show_name: true
        show_icon: true
        type: button
        tap_action:
          action: more-info
        show_state: true
        hold_action:
          action: none
        entity: sensor.unifi_router_uptime
        card_mod:
          class: button-bullet
          style: |
            ha-card > * {
              font-family: Antonio
            }
      - type: markdown
        content: '# Emergency Power'
        card_mod:
          class: middle
          style: |
            ha-card > * {
              font-family: Antonio
            }
      - show_name: true
        show_icon: true
        type: button
        tap_action:
          action: more-info
        show_state: true
        hold_action:
          action: none
        entity: sensor.ups01_battery_charge
        card_mod:
          class: button-bullet
          style: |
            ha-card > * {
              font-family: Antonio
            }
      - show_name: true
        show_icon: true
        type: button
        tap_action:
          action: more-info
        show_state: true
        hold_action:
          action: none
        entity: sensor.ups01_load
        card_mod:
          class: button-bullet
          style: |
            ha-card > * {
              font-family: Antonio
            }
      - type: markdown
        content: '# Core Temps'
        card_mod:
          class: middle
          style: |
            ha-card > * {
              font-family: Antonio
            }
      - show_name: true
        show_icon: true
        type: button
        tap_action:
          action: more-info
        show_state: true
        name: Rack Temperature
        hold_action:
          action: none
        entity: sensor.temp_acurite_606tx_a
        card_mod:
          class: button-bullet
          style: |
            ha-card > * {
              font-family: Antonio
            }
      - show_name: true
        show_icon: true
        type: button
        tap_action:
          action: more-info
        show_state: true
        hold_action:
          action: none
        entity: sensor.office_temperature
        card_mod:
          class: button-bullet
          style: |
            ha-card > * {
              font-family: Antonio
            }
  - type: vertical-stack
    view_layout:
      grid-area: main
    cards:
      - type: markdown
        content: '# Computer Cores'
        card_mod:
          class: header-open
          style: |
            ha-card > * {
              font-family: Antonio
            }
      - type: horizontal-stack
        cards:
          - type: custom:mushroom-template-card
            card_mod:
              class: button-large
            icon: mdi:raspberry-pi
            icon_color: >-
              {% if states.sensor.rpi_temp_cardinal.state | int < 140 %}
                green
              {% elif states.sensor.rpi_temp_cardinal.state | int >= 140 and
              states.sensor.rpi_temp_cardinal.state | int < 176 %}
                orange
              {% else %}
                red
              {% endif %}
            multiline_secondary: true
            primary: '{{ states.sensor.rpi_monitor_cardinal.attributes.host_name }}'
            layout: vertical
            secondary: >-
              {% set rpi_model =
              states.sensor.rpi_monitor_cardinal.attributes.rpi_model.split('
              ') %}

              {% set memMax =
              (states.sensor.rpi_monitor_cardinal.attributes.memory.size_mb|int/1024)|int
              +1 %}

              {% set memUsed = '%0.1f' % ( 100- (
              states.sensor.rpi_monitor_cardinal.attributes.memory.free_mb|float
              /
              states.sensor.rpi_monitor_cardinal.attributes.memory.size_mb|float
              )  * 100) %}

              RPi {{ rpi_model[1] }}{{ rpi_model[3] }} {{ memMax }}GB

              CPU: {{ states.sensor.rpi_cpu_use_cardinal.state }}%

              RAM: {{ memUsed }}%

              SD: {{ states.sensor.rpi_used_cardinal.state }}%
            entity: sensor.rpi_temp_cardinal
            tap_action:
              action: more-info
          - type: custom:mushroom-template-card
            card_mod:
              class: button-large
            icon: mdi:raspberry-pi
            icon_color: >-
              {% if states.sensor.cpu_temp.state | int < 60 %}
                green
              {% elif states.sensor.cpu_temp.state | int >= 60 and
              states.sensor.cpu_temp.state | int < 80 %}
                orange
              {% else %}
                red
              {% endif %}
            multiline_secondary: true
            primary: hestia
            layout: vertical
            secondary: |-
              RPi 4B 8GB
              CPU: {{ states.sensor.processor_use.state }}%
              RAM: {{ states.sensor.memory_use_percent.state }}%
              SD: {{ states.sensor.disk_use_percent.state }}%
            entity: sensor.cpu_temp
            tap_action:
              action: more-info
          - type: custom:mushroom-template-card
            card_mod:
              class: button-large
            icon: mdi:raspberry-pi
            icon_color: >-
              {% if states.sensor.rpi_temp_artemis.state | int < 140 %}
                green
              {% elif states.sensor.rpi_temp_artemis.state | int >= 140 and
              states.sensor.rpi_temp_artemis.state | int < 176 %}
                orange
              {% else %}
                red
              {% endif %}
            multiline_secondary: true
            primary: '{{ states.sensor.rpi_monitor_artemis.attributes.host_name }}'
            layout: vertical
            secondary: >-
              {% set rpi_model =
              states.sensor.rpi_monitor_artemis.attributes.rpi_model.split('
              ') %}

              {% set memMax =
              (states.sensor.rpi_monitor_artemis.attributes.memory.size_mb|int/1024)|int
              +1 %}

              {% set memUsed = '%0.1f' % ( 100- (
              states.sensor.rpi_monitor_artemis.attributes.memory.free_mb|float
              /
              states.sensor.rpi_monitor_artemis.attributes.memory.size_mb|float
              )  * 100) %}

              RPi {{ rpi_model[1] }}{{ rpi_model[3] }} {{ memMax }}GB

              CPU: {{ states.sensor.rpi_cpu_use_artemis.state }}%

              RAM: {{ memUsed }}%

              SD: {{ states.sensor.rpi_used_artemis.state }}%
            entity: sensor.rpi_temp_artemis
            tap_action:
              action: more-info
          - type: custom:mushroom-template-card
            card_mod:
              class: button-large
            icon: mdi:raspberry-pi
            icon_color: >-
              {% if states.sensor.rpi_temp_Apollo.state | int < 140 %}
                green
              {% elif states.sensor.rpi_temp_Apollo.state | int >= 140 and
              states.sensor.rpi_temp_Apollo.state | int < 176 %}
                orange
              {% else %}
                red
              {% endif %}
            multiline_secondary: true
            primary: '{{ states.sensor.rpi_monitor_Apollo.attributes.host_name }}'
            layout: vertical
            secondary: >-
              {% set rpi_model =
              states.sensor.rpi_monitor_Apollo.attributes.rpi_model.split('
              ') %}

              {% set memMax =
              (states.sensor.rpi_monitor_Apollo.attributes.memory.size_mb|int/1024)|int
              +1 %}

              {% set memUsed = '%0.1f' % ( 100- (
              states.sensor.rpi_monitor_Apollo.attributes.memory.free_mb|float
              /
              states.sensor.rpi_monitor_Apollo.attributes.memory.size_mb|float
              )  * 100) %}

              RPi {{ rpi_model[1] }}{{ rpi_model[3] }} {{ memMax }}GB

              CPU: {{ states.sensor.rpi_cpu_use_Apollo.state }}%

              RAM: {{ memUsed }}%

              SD: {{ states.sensor.rpi_used_Apollo.state }}%
            entity: sensor.rpi_temp_apollo
            tap_action:
              action: more-info

      - type: horizontal-stack
        cards:
          - type: custom:mushroom-template-card
            card_mod:
              class: button-large
            icon: mdi:raspberry-pi
            icon_color: >-
              {% if states.sensor.rpi_temp_charles.state | int < 140 %}
                green
              {% elif states.sensor.rpi_temp_charles.state | int >= 140 and
              states.sensor.rpi_temp_charles.state | int < 176 %}
                orange
              {% else %}
                red
              {% endif %}
            multiline_secondary: true
            primary: '{{ states.sensor.rpi_monitor_charles.attributes.host_name }}'
            layout: vertical
            secondary: >-
              {% set rpi_model =
              states.sensor.rpi_monitor_charles.attributes.rpi_model.split('
              ') %}

              {% set memMax =
              (states.sensor.rpi_monitor_charles.attributes.memory.size_mb|int/1024)|int
              +1 %}

              {% set memUsed = '%0.1f' % ( 100- (
              states.sensor.rpi_monitor_charles.attributes.memory.free_mb|float
              /
              states.sensor.rpi_monitor_charles.attributes.memory.size_mb|float
              )  * 100) %}

              RPi {{ rpi_model[1] }}B+ {{ memMax }}GB

              CPU: {{ states.sensor.rpi_cpu_use_charles.state }}%

              RAM: {{ memUsed }}%

              SD: {{ states.sensor.rpi_used_charles.state }}%
            entity: sensor.rpi_temp_charles
            tap_action:
              action: more-info
          - type: custom:mushroom-template-card
            card_mod:
              class: button-large
            icon: mdi:raspberry-pi
            icon_color: >-
              {% if states.sensor.rpi_k3s_1_folden_nissen_com_rpi_temp_k3s_1.state | int < 140 %}
                green
              {% elif states.sensor.rpi_k3s_1_folden_nissen_com_rpi_temp_k3s_1.state | int >= 140 and
              states.sensor.rpi_k3s_1_folden_nissen_com_rpi_temp_k3s_1.state | int < 176 %}
                orange
              {% else %}
                red
              {% endif %}
            multiline_secondary: true
            primary: '{{ states.sensor.rpi_k3s_1_folden_nissen_com_rpi_monitor_k3s_1.attributes.host_name }}'
            layout: vertical
            secondary: >-
              {% set rpi_model =
              states.sensor.rpi_k3s_1_folden_nissen_com_rpi_monitor_k3s_1.attributes.rpi_model.split('
              ') %}

              {% set memMax =
              (states.sensor.rpi_k3s_1_folden_nissen_com_rpi_monitor_k3s_1.attributes.memory.size_mb|int/1024)|int
              +1 %}

              {% set memUsed = '%0.1f' % ( 100- (
              states.sensor.rpi_k3s_1_folden_nissen_com_rpi_monitor_k3s_1.attributes.memory.free_mb|float
              /
              states.sensor.rpi_k3s_1_folden_nissen_com_rpi_monitor_k3s_1.attributes.memory.size_mb|float
              )  * 100) %}

              RPi {{ rpi_model[1] }}B+ {{ memMax }}GB

              CPU: {{ states.sensor.rpi_cpu_use_k3s_1.state }}%

              RAM: {{ memUsed }}%

              SD: {{ states.sensor.rpi_used_k3s_1.state }}%
            entity: sensor.rpi_k3s_1_folden_nissen_com_rpi_temp_k3s_1
            tap_action:
              action: more-info
          - type: custom:mushroom-template-card
            card_mod:
              class: button-large
            icon: mdi:raspberry-pi
            icon_color: >-
              {% if states.sensor.rpi_temp_k3s_2.state | int < 140 %}
                green
              {% elif states.sensor.rpi_temp_k3s_2.state | int >= 140 and
              states.sensor.rpi_temp_k3s_2.state | int < 176 %}
                orange
              {% else %}
                red
              {% endif %}
            multiline_secondary: true
            primary: '{{ states.sensor.rpi_monitor_k3s_2.attributes.host_name }}'
            layout: vertical
            secondary: >-
              {% set rpi_model =
              states.sensor.rpi_monitor_k3s_2.attributes.rpi_model.split('
              ') %}

              {% set memMax =
              (states.sensor.rpi_monitor_k3s_2.attributes.memory.size_mb|int/1024)|int
              +1 %}

              {% set memUsed = '%0.1f' % ( 100- (
              states.sensor.rpi_monitor_k3s_2.attributes.memory.free_mb|float
              /
              states.sensor.rpi_monitor_k3s_2.attributes.memory.size_mb|float
              )  * 100) %}

              RPi {{ rpi_model[1] }}B+ {{ memMax }}GB

              CPU: {{ states.sensor.rpi_cpu_use_k3s_2.state }}%

              RAM: {{ memUsed }}%

              SD: {{ states.sensor.rpi_used_k3s_2.state }}%
            entity: sensor.rpi_temp_k3s_2
            tap_action:
              action: more-info
          - type: custom:mushroom-template-card
            card_mod:
              class: button-large
            icon: mdi:raspberry-pi
            icon_color: >-
              {% if states.sensor.rpi_temp_k3s_3.state | int < 140 %}
                green
              {% elif states.sensor.rpi_temp_k3s_3.state | int >= 140 and
              states.sensor.rpi_temp_k3s_3.state | int < 176 %}
                orange
              {% else %}
                red
              {% endif %}
            multiline_secondary: true
            primary: '{{ states.sensor.rpi_monitor_k3s_3.attributes.host_name }}'
            layout: vertical
            secondary: >-
              {% set rpi_model =
              states.sensor.rpi_monitor_k3s_3.attributes.rpi_model.split('
              ') %}

              {% set memMax =
              (states.sensor.rpi_monitor_k3s_3.attributes.memory.size_mb|int/1024)|int
              +1 %}

              {% set memUsed = '%0.1f' % ( 100- (
              states.sensor.rpi_monitor_k3s_3.attributes.memory.free_mb|float
              /
              states.sensor.rpi_monitor_k3s_3.attributes.memory.size_mb|float
              )  * 100) %}

              RPi {{ rpi_model[1] }}B+ {{ memMax }}GB

              CPU: {{ states.sensor.rpi_cpu_use_k3s_3.state }}%

              RAM: {{ memUsed }}%

              SD: {{ states.sensor.rpi_used_k3s_3.state }}%
            entity: sensor.rpi_temp_k3s_3
            tap_action:
              action: more-info

      - type: markdown
        content: '# Subspace Uplink'
        card_mod:
          class: bar
          style: |
            ha-card > * {
              font-family: Antonio
            }
      - type: horizontal-stack
        cards:
          - type: custom:mushroom-template-card
            card_mod:
              class: button-large
            primary: >-
              {{states.sensor.speedtest_download.state | float}}
              {{state_attr('sensor.speedtest_download','unit_of_measurement')}}
            secondary: Download Speed
            icon: mdi:arrow-down
            icon_color: |-
              {% if states.sensor.speedtest_download.state | float < 100 %}
                red
              {% else %}
                green
              {% endif %}
          - type: custom:mushroom-template-card
            card_mod:
              class: button-large
            primary: >-
              {{states.sensor.speedtest_upload.state | float}}
              {{state_attr('sensor.speedtest_upload','unit_of_measurement')}}
            secondary: Upload Speed
            icon: mdi:arrow-up
            icon_color: |-
              {% if states.sensor.speedtest_upload.state | float < 15 %}
                red
              {% else %}
                green
              {% endif %}
      - type: horizontal-stack
        cards:
          - type: custom:mushroom-template-card
            card_mod:
              class: button-large
            primary: >-
              {% if states.binary_sensor.internet_connection.state == 'on'
              %}
                Internet Connection: Up
              {% else %}
                Internet Connection: Down
              {% endif %}
            secondary: >-
              Uptime: {{ relative_time(now() - timedelta( seconds =
              state_attr('sensor.unifi_gateway_www', 'uptime') | int))  }}
            icon: >-
              {% if states.binary_sensor.internet_connection.state == 'on'
              %}
                mdi:network
              {% else %}
                mdi:network-off
              {% endif %}
            icon_color: >-
              {% if states.binary_sensor.internet_connection.state == 'on'
              %}
                green
              {% else %}
                red
              {% endif %}
          - type: custom:mushroom-template-card
            card_mod:
              class: button-large
            primary: >-
              {{states.sensor.speedtest_ping.state | float}}
              {{state_attr('sensor.speedtest_ping','unit_of_measurement')}}
            secondary: Ping
            icon: mdi:lan-pending
            icon_color: |-
              {% if states.sensor.speedtest_ping.state | float > 50 %}
                red
              {% else %}
                green
              {% endif %}
      - type: markdown
        content: '# Computer Core Power Usage'
        card_mod:
          class: bar
          style: |
            ha-card > * {
              font-family: Antonio
            }
      - type: custom:mini-graph-card
        entities:
          - entity: sensor.ups01_current_real_power
            color: var(--lcars-card-top-color)
        name: Computer Core Power Usage
        card_mod:
          class: middle-blank
          style: |
            ha-card > * {
              font-family: Antonio
            }
