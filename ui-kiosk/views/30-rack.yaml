---
title: Rack
icon: "mdi:server"
theme: LCARS Modern
type: custom:grid-layout
layout:
  grid-template-columns: 22% 58% 20%
  grid-template-rows: minmax(10%,auto) minmax(auto,60%) 10%
  grid-template-areas: |
    "headerL headerR headerR"
    "menu main aux"
    "sidebar main aux"
    "footer footer footer"
path: rack
badges: []
cards:
  - !include ../includes/headerL.yaml
  - !include ../includes/headerR.yaml
  - !include ../includes/menu.yaml
  - !include ../includes/footer.yaml

  - type: vertical-stack
    view_layout:
      grid-area: aux
    cards:
      - type: markdown
        content: '# Computer Rack Layout'
        card_mod:
          class: header-open
          style: |
            ha-card > * {
              font-family: Antonio
            }
      - type: picture
        image: /local/images/rack.png
        tap_action:
          action: none
        hold_action:
          action: none
      - show_name: true
        show_icon: true
        type: button
        tap_action:
          action: toggle
        entity: sensor.ups01_nominal_real_power
        show_state: true
        name: Power Draw
        card_mod:
          class: button-lozenge
          style: |
            ha-card > * {
              font-family: Antonio
            }

  - type: vertical-stack
    view_layout:
      grid-area: sidebar
    cards:

      - type: markdown
        content: "# Computer Bank"
        card_mod:
          class:middle-left
          style: |
            ha-card > * {
              font-family: Antonio
            }
      - show_name: true
        show_icon: true
        type: button
        tap_action:
          action: toggle
        entity: sensor.temp_rack_2
        name: "Computer Core Temp"
        show_state: true
        card_mod:
          class: button-bullet
          style: |
            ha-card > * {
              font-family: Antonio
            }
      - show_name: true
        show_icon: true
        type: button
        tap_action:
          action: toggle
        entity: sensor.uptimekuma_dns
        name: "DNS Health"
        icon: mdi:crosshairs
        show_state: true
        card_mod:
          class: button-bullet
          style: |
            ha-card > * {
              font-family: Antonio
            }
      - show_name: true
        show_icon: true
        type: button
        tap_action:
          action: toggle
        entity: sensor.uptimekuma_hestia_https
        name: "Home Automation Health"
        icon: mdi:home-automation
        show_state: true
        card_mod:
          class: button-bullet
          style: |
            ha-card > * {
              font-family: Antonio
            }
      - show_name: true
        show_icon: true
        type: button
        tap_action:
          action: toggle
        entity: sensor.uptimekuma_k3s_api
        name: "Orchestration Health"
        icon: mdi:server-outline
        show_state: true
        card_mod:
          class: button-bullet
          style: |
            ha-card > * {
              font-family: Antonio
            }
      - show_name: true
        show_icon: true
        type: button
        tap_action:
          action: toggle
        entity: sensor.uptimekuma_truenas_https
        name: "Storage Health"
        icon: mdi:nas
        show_state: true
        card_mod:
          class: button-bullet
          style: |
            ha-card > * {
              font-family: Antonio
            }
      - show_name: true
        show_icon: true
        type: button
        tap_action:
          action: toggle
        entity: sensor.netshare_free
        name: "Storage Available"
        icon: mdi:database
        show_state: true
        card_mod:
          class: button-bullet
          style: |
            ha-card > * {
              font-family: Antonio
            }

  - type: vertical-stack
    view_layout:
      grid-area: main
    cards:
      - type: markdown
        content: '# Computer Cores'
        card_mod:
          class: header-open
          style: |
            ha-card > * {
              font-family: Antonio
            }
      - type: horizontal-stack
        cards:
          - type: custom:mushroom-template-card
            card_mod:
              class: button-large
            icon: mdi:raspberry-pi
            icon_color: >-
              {% if states.sensor.rpi_temp_cardinal.state | int < 140 %}
                green
              {% elif states.sensor.rpi_temp_cardinal.state | int >= 140 and
              states.sensor.rpi_temp_cardinal.state | int < 176 %}
                orange
              {% else %}
                red
              {% endif %}
            multiline_secondary: true
            primary: '{{ states.sensor.rpi_monitor_cardinal.attributes.host_name }}'
            layout: vertical
            secondary: >-
              {% set rpi_model =
              states.sensor.rpi_monitor_cardinal.attributes.rpi_model.split('
              ') %}

              {% set memMax =
              (states.sensor.rpi_monitor_cardinal.attributes.memory.size_mb|int/1024)|int
              +1 %}

              {% set memUsed = '%0.1f' % ( 100- (
              states.sensor.rpi_monitor_cardinal.attributes.memory.free_mb|float
              /
              states.sensor.rpi_monitor_cardinal.attributes.memory.size_mb|float
              )  * 100) %}

              RPi {{ rpi_model[1] }}{{ rpi_model[3] }} {{ memMax }}GB

              CPU: {{ states.sensor.rpi_cpu_use_cardinal.state }}%

              RAM: {{ memUsed }}%

              SD: {{ states.sensor.rpi_used_cardinal.state }}%
            entity: sensor.rpi_temp_cardinal
            tap_action:
              action: more-info
          - type: custom:mushroom-template-card
            card_mod:
              class: button-large
            icon: mdi:raspberry-pi
            icon_color: >-
              {% if states.sensor.cpu_temp.state | int < 60 %}
                green
              {% elif states.sensor.cpu_temp.state | int >= 60 and
              states.sensor.cpu_temp.state | int < 80 %}
                orange
              {% else %}
                red
              {% endif %}
            multiline_secondary: true
            primary: hestia
            layout: vertical
            secondary: |-
              RPi 4B 8GB
              CPU: {{ states.sensor.processor_use.state }}%
              RAM: {{ states.sensor.memory_use_percent.state }}%
              SD: {{ states.sensor.disk_use_percent.state }}%
            entity: sensor.cpu_temp
            tap_action:
              action: more-info
          - type: custom:mushroom-template-card
            card_mod:
              class: button-large
            icon: mdi:raspberry-pi
            icon_color: >-
              {% if states.sensor.rpi_temp_artemis.state | int < 140 %}
                green
              {% elif states.sensor.rpi_temp_artemis.state | int >= 140 and
              states.sensor.rpi_temp_artemis.state | int < 176 %}
                orange
              {% else %}
                red
              {% endif %}
            multiline_secondary: true
            primary: '{{ states.sensor.rpi_monitor_artemis.attributes.host_name }}'
            layout: vertical
            secondary: >-
              {% set rpi_model =
              states.sensor.rpi_monitor_artemis.attributes.rpi_model.split('
              ') %}

              {% set memMax =
              (states.sensor.rpi_monitor_artemis.attributes.memory.size_mb|int/1024)|int
              +1 %}

              {% set memUsed = '%0.1f' % ( 100- (
              states.sensor.rpi_monitor_artemis.attributes.memory.free_mb|float
              /
              states.sensor.rpi_monitor_artemis.attributes.memory.size_mb|float
              )  * 100) %}

              RPi {{ rpi_model[1] }}{{ rpi_model[3] }} {{ memMax }}GB

              CPU: {{ states.sensor.rpi_cpu_use_artemis.state }}%

              RAM: {{ memUsed }}%

              SD: {{ states.sensor.rpi_used_artemis.state }}%
            entity: sensor.rpi_temp_artemis
            tap_action:
              action: more-info
          - type: custom:mushroom-template-card
            card_mod:
              class: button-large
            icon: mdi:raspberry-pi
            icon_color: >-
              {% if states.sensor.rpi_temp_Apollo.state | int < 140 %}
                green
              {% elif states.sensor.rpi_temp_Apollo.state | int >= 140 and
              states.sensor.rpi_temp_Apollo.state | int < 176 %}
                orange
              {% else %}
                red
              {% endif %}
            multiline_secondary: true
            primary: '{{ states.sensor.rpi_monitor_Apollo.attributes.host_name }}'
            layout: vertical
            secondary: >-
              {% set rpi_model =
              states.sensor.rpi_monitor_Apollo.attributes.rpi_model.split('
              ') %}

              {% set memMax =
              (states.sensor.rpi_monitor_Apollo.attributes.memory.size_mb|int/1024)|int
              +1 %}

              {% set memUsed = '%0.1f' % ( 100- (
              states.sensor.rpi_monitor_Apollo.attributes.memory.free_mb|float
              /
              states.sensor.rpi_monitor_Apollo.attributes.memory.size_mb|float
              )  * 100) %}

              RPi {{ rpi_model[1] }}{{ rpi_model[3] }} {{ memMax }}GB

              CPU: {{ states.sensor.rpi_cpu_use_Apollo.state }}%

              RAM: {{ memUsed }}%

              SD: {{ states.sensor.rpi_used_Apollo.state }}%
            entity: sensor.rpi_temp_apollo
            tap_action:
              action: more-info

      - type: horizontal-stack
        cards:
          - type: custom:mushroom-template-card
            card_mod:
              class: button-large
            icon: mdi:raspberry-pi
            icon_color: >-
              {% if states.sensor.rpi_temp_charles.state | int < 140 %}
                green
              {% elif states.sensor.rpi_temp_charles.state | int >= 140 and
              states.sensor.rpi_temp_charles.state | int < 176 %}
                orange
              {% else %}
                red
              {% endif %}
            multiline_secondary: true
            primary: '{{ states.sensor.rpi_monitor_charles.attributes.host_name }}'
            layout: vertical
            secondary: >-
              {% set rpi_model =
              states.sensor.rpi_monitor_charles.attributes.rpi_model.split('
              ') %}

              {% set memMax =
              (states.sensor.rpi_monitor_charles.attributes.memory.size_mb|int/1024)|int
              +1 %}

              {% set memUsed = '%0.1f' % ( 100- (
              states.sensor.rpi_monitor_charles.attributes.memory.free_mb|float
              /
              states.sensor.rpi_monitor_charles.attributes.memory.size_mb|float
              )  * 100) %}

              RPi {{ rpi_model[1] }}B+ {{ memMax }}GB

              CPU: {{ states.sensor.rpi_cpu_use_charles.state }}%

              RAM: {{ memUsed }}%

              SD: {{ states.sensor.rpi_used_charles.state }}%
            entity: sensor.rpi_temp_charles
            tap_action:
              action: more-info

          - type: custom:mushroom-template-card
            card_mod:
              class: button-large
            icon: mdi:raspberry-pi
            icon_color: >-
              {%- if states.sensor.rpi_k3s_1_folden_nissen_com_rpi_temp_k3s_1.state | int < 140 %}
                green
              {%- elif states.sensor.rpi_k3s_1_folden_nissen_com_rpi_temp_k3s_1.state | int >= 140 and
              states.sensor.rpi_k3s_1_folden_nissen_com_rpi_temp_k3s_1.state | int < 176 %}
                orange
              {%- else %}
                red
              {%- endif %}
            multiline_secondary: true
            primary: '{{ states.sensor.rpi_k3s_1_folden_nissen_com_rpi_monitor_k3s_1.attributes.host_name }}'
            layout: vertical
            secondary: >-
              {%- set rpi_model =
              states.sensor.rpi_k3s_1_folden_nissen_com_rpi_monitor_k3s_1.attributes.rpi_model.split('
              ') %}
              {%- set memMax =
              (states.sensor.rpi_k3s_1_folden_nissen_com_rpi_monitor_k3s_1.attributes.memory.size_mb|int/1024)|int
              +1 %}
              {%- set memUsed = '%0.1f' % ( 100- (
              states.sensor.rpi_k3s_1_folden_nissen_com_rpi_monitor_k3s_1.attributes.memory.free_mb|float
              /
              states.sensor.rpi_k3s_1_folden_nissen_com_rpi_monitor_k3s_1.attributes.memory.size_mb|float
              )  * 100) %}

              RPi {{ rpi_model[1] }}B+ {{ memMax }}GB

              CPU: {{ states.sensor.rpi_k3s_1_folden_nissen_com_rpi_cpu_use_k3s_1.state }}%

              RAM: {{ memUsed }}%

              SD: {{ states.sensor.rpi_k3s_1_folden_nissen_com_rpi_disk_used_k3s_1.state }}%
            entity: sensor.rpi_k3s_1_folden_nissen_com_rpi_temp_k3s_1
            tap_action:
              action: more-info

          - type: custom:mushroom-template-card
            card_mod:
              class: button-large
            icon: mdi:raspberry-pi
            icon_color: >-
              {% if states.sensor.rpi_temp_k3s_2.state | int < 140 %}
                green
              {% elif states.sensor.rpi_temp_k3s_2.state | int >= 140 and
              states.sensor.rpi_temp_k3s_2.state | int < 176 %}
                orange
              {% else %}
                red
              {% endif %}
            multiline_secondary: true
            primary: '{{ states.sensor.rpi_monitor_k3s_2.attributes.host_name }}'
            layout: vertical
            secondary: >-
              {% set rpi_model =
              states.sensor.rpi_monitor_k3s_2.attributes.rpi_model.split('
              ') %}

              {% set memMax =
              (states.sensor.rpi_monitor_k3s_2.attributes.memory.size_mb|int/1024)|int
              +1 %}

              {% set memUsed = '%0.1f' % ( 100- (
              states.sensor.rpi_monitor_k3s_2.attributes.memory.free_mb|float
              /
              states.sensor.rpi_monitor_k3s_2.attributes.memory.size_mb|float
              )  * 100) %}

              RPi {{ rpi_model[1] }}B+ {{ memMax }}GB

              CPU: {{ states.sensor.rpi_cpu_use_k3s_2.state }}%

              RAM: {{ memUsed }}%

              SD: {{ states.sensor.rpi_used_k3s_2.state }}%
            entity: sensor.rpi_temp_k3s_2
            tap_action:
              action: more-info
          - type: custom:mushroom-template-card
            card_mod:
              class: button-large
            icon: mdi:raspberry-pi
            icon_color: >-
              {% if states.sensor.rpi_temp_k3s_3.state | int < 140 %}
                green
              {% elif states.sensor.rpi_temp_k3s_3.state | int >= 140 and
              states.sensor.rpi_temp_k3s_3.state | int < 176 %}
                orange
              {% else %}
                red
              {% endif %}
            multiline_secondary: true
            primary: '{{ states.sensor.rpi_monitor_k3s_3.attributes.host_name }}'
            layout: vertical
            secondary: >-
              {% set rpi_model =
              states.sensor.rpi_monitor_k3s_3.attributes.rpi_model.split('
              ') %}

              {% set memMax =
              (states.sensor.rpi_monitor_k3s_3.attributes.memory.size_mb|int/1024)|int
              +1 %}

              {% set memUsed = '%0.1f' % ( 100- (
              states.sensor.rpi_monitor_k3s_3.attributes.memory.free_mb|float
              /
              states.sensor.rpi_monitor_k3s_3.attributes.memory.size_mb|float
              )  * 100) %}

              RPi {{ rpi_model[1] }}B+ {{ memMax }}GB

              CPU: {{ states.sensor.rpi_cpu_use_k3s_3.state }}%

              RAM: {{ memUsed }}%

              SD: {{ states.sensor.rpi_used_k3s_3.state }}%
            entity: sensor.rpi_temp_k3s_3
            tap_action:
              action: more-info
      - type: markdown
        content: '# Controller Cores'
        card_mod:
          class: bar
          style: |
            ha-card > * {
              font-family: Antonio
            }
      - type: horizontal-stack
        cards:
          - type: custom:stack-in-card
            cards:
              - type: custom:mushroom-template-card
                card_mod:
                  class: button-large
                icon: mdi:server-network
                icon_color: >-
                  {% if states.sensor.temperature.state | int < 60 %}
                    green
                  {% elif states.sensor.temperature.state | int >= 60 and
                  states.sensor.temperature.state | int < 80 %}
                    orange
                  {% else %}
                    red
                  {% endif %}
                multiline_secondary: true
                primary: TrueNAS
                layout: horizontal
                secondary: >-
                  Dell r510 64GB

                  CPU: {{ states.sensor.cpu_usage.state }}% • RAM: {{
                  states.sensor.memory_usage.state }}%
                entity: update.update
                tap_action:
                  action: more-info
                fill_container: true
              - type: horizontal-stack
                cards:
                  - type: gauge
                    entity: sensor.fanspeed_r510
                    name: Fan
                    unit: rpm
                    min: 0
                    max: 10000
                  - type: gauge
                    entity: sensor.temp_r510
                    name: Temp
                    min: 0
                    max: 140
          - type: custom:stack-in-card
            cards:
              - type: custom:mushroom-template-card
                card_mod:
                  class: button-large
                icon: mdi:server-network
                icon_color: >-
                  {% if states.sensor.net_folden_nissen_com_cpu_temperature.state | int < 140 %}
                    green
                  {% elif states.sensor.net_folden_nissen_com_cpu_temperature.state | int >= 140 and
                  states.sensor.net_folden_nissen_com_cpu_temperature.state | int < 176 %}
                    orange
                  {% else %}
                    red
                  {% endif %}
                multiline_secondary: true
                primary: Router
                layout: horizontal
                secondary: >-
                  Unifi Dream Machine SE • Uptime: {{states('sensor.unifi_router_uptime')}}

                  CPU: {{ states('sensor.net_folden_nissen_com_cpu_utilization') }}% • RAM: {{
                  states('sensor.net_folden_nissen_com_memory_utilization') }}%
                entity: update.update
                tap_action:
                  action: more-info
                fill_container: true
              - type: horizontal-stack
                cards:
                  - type: gauge
                    entity: sensor.network_users
                    name: Clients
                    min: 0
                    max: 200
                  - type: gauge
                    entity: sensor.net_folden_nissen_com_cpu_temperature
                    name: Temp
                    min: 0
                    max: 140
      - type: markdown
        content: '# Subspace Uplink'
        card_mod:
          class: bar
          style: |
            ha-card > * {
              font-family: Antonio
            }
      - show_name: true
        show_icon: false
        show_state: true
        type: glance
        entities:
          - entity: sensor.net_folden_nissen_com_cloudflare_wan_latency
          - entity: sensor.net_folden_nissen_com_microsoft_wan_latency
          - entity: sensor.net_folden_nissen_com_google_wan_latency
          - entity: binary_sensor.internet_connection
            name: ISP Uplink
        columns: 4
        card_mod:
          class: middle-blank
          style: |
            ha-card > * {
              font-family: Antonio
            }
      - type: markdown
        content: "# Emergency Power"
        card_mod:
          class: bar
          style: |
            ha-card > * {
              font-family: Antonio
            }
      - type: horizontal-stack
        cards:
          - show_name: true
            show_icon: true
            type: button
            tap_action:
              action: toggle
            entity: sensor.ups01_battery_charge_2
            show_state: true
            card_mod:
              class: button-lozenge
              style: |
                ha-card > * {
                  font-family: Antonio
                }
          - show_name: true
            show_icon: true
            type: button
            tap_action:
              action: toggle
            entity: sensor.ups01_load_2
            show_state: true
            card_mod:
              class: button-lozenge
              style: |
                ha-card > * {
                  font-family: Antonio
                }
