theme: LCARS Nemesis Blue
visible:
  - user: 829c75b162794808a699871056da2b93
title: New Main Floor
icon: mdi:stairs-box
layout:
  grid-template-columns: 20% 20% minmax(auto,35%) 25%
  grid-template-rows: 10% minmax(auto,60%) 10%
  grid-template-areas: |
    "headerL headerC headerR headerR"
    "sidebar sidebar2 main aux"
    "footer footer footer footer"
  mediaquery:
    '(max-width: 800px)':
      grid-template-columns: 100%
      grid-template-rows: auto
      grid-template-areas: |
        "headerC"
        "headerR"
        "main"
        "aux"
        "sidebar2"
        "footer"
type: custom:grid-layout
path: mainfloor2
badges: []
cards:
  - view_layout:
      grid-area: headerL
    type: custom:button-card
    name: |
      [[[ 
        var date = new Date().getDate();
        var year = new Date().getYear();
        var year = year - 100;
        var numMonth = new Date().getMonth();
        var month;
        switch(numMonth) {
          case 0:
            month = 'Jan';
            break;
          case 1:
            month = 'Feb';
            break;
          case 2:
            month = 'Mar';
            break;
          case 3:
            month = 'Apr';
            break;
          case 4:
            month = 'May';
            break;
          case 5:
            month = 'Jun';
            break;
          case 6:
            month = 'Jul';
            break;
          case 7:
            month = 'Aug';
            break;
          case 8:
            month = 'Sep';
            break;
          case 9:
            month = 'Oct';
            break;
          case 10:
            month = 'Nov';
            break;
          case 11:
            month = 'Dec';
            break;
        }

        var time = new Date().toLocaleTimeString('en-US',{ hour12: false, hour: "2-digit", minute: "2-digit"});
        return `Stardate: ${states['sensor.stardate'].state} &#149; ${date} ${month} ${year} &#149; ${time}`
      ]]]
    layout: vertical
    card_mod:
      class: footer
      style: |
        ha-card > * {
          font-family: Antonio
        }

  - view_layout:
      grid-area: headerC
    type: custom:button-card
    name: |
      [[[ 
        var condition = states['weather.kwdr_daynight'].state;
        var output;
        switch(condition) {
          case 'sunny':
            output = 'Sunny';
            break;
          case 'clear':
            output = 'Clear';
            break;
          case 'mostly-sunny':
            output = 'Mostly Sunny';
            break;
          case 'partly-cloudy':
            output = 'Partly Cloudy';
            break;
          case 'cloudy':
            output = 'Cloudy';
            break;
          case 'light-rain':
            output = 'Light Rain';
            break;
          case 'wind':
            output = 'Windy';
            break;
          case 'windy':
            output = 'Windy';
            break;
          case 'dust':
            output = 'Dusty';
            break;
          case 'fog':
            output = 'Foggy';
            break;
          case 'showers':
            output = 'Showers';
            break;
          case 'rain':
            output = 'Rain';
            break;
          case 'rainy':
            output = 'Rainy';
            break;
          case 'storm':
            output = 'Stormy';
            break;
          case 'stormy':
            output = 'Stormy';
            break;
          case 'light-showers':
            output = 'Light Showers';
            break;
          case 'light-shower':
            output = 'Light Showers';
            break;
          case 'heavy-showers':
            output = 'Heavy Showers';
            break;
          case 'heavy-shower':
            output = 'Heavy Showers';
            break;
          case 'clear-day':
            output = 'Clear';
            break;
          case 'clear-night':
            output = 'Clear';
            break;
          case 'partly-cloudy-day':
            output = 'Partly Cloudy';
            break;
          case 'partly-cloudy-night':
            output = 'Partly Cloudy';
            break;
          case 'hail':
            output = 'Hailing';
            break;
          case 'lightning':
            output = 'Lightning';
            break;
          case 'thunderstorm':
            output = 'Thunderstorms';
            break;
          default:
            output = states['weather.kwdr_daynight'].state;
            break;
          }

          return `Conditions: ${output}`;
      ]]]
    card_mod:
      class: footer-open
      style: |
        ha-card > * {
          font-family: Antonio
        }
  - view_layout:
      grid-area: headerR
    type: custom:mushroom-chips-card
    card_mod:
      class: footer-open
      style: |
        ha-card > * {
          font-family: Antonio
        }
    chips:
      - type: conditional
        conditions:
          - entity: input_boolean.mail_present
            state: 'on'
        chip:
          type: template
          icon_color: white
          content: Mail
          tap_action:
            action: navigate
            navigation_path: mailalert
          icon: mdi:mail
      - type: conditional
        conditions:
          - entity: input_boolean.package_present
            state: 'on'
        chip:
          type: template
          icon_color: white
          content: Packages
          tap_action:
            action: navigate
            navigation_path: mailalert
          icon: mdi:package-check
      - type: conditional
        conditions:
          - entity: sensor.trash
            state: today
        chip:
          type: template
          icon_color: white
          content: Trash
          icon: mdi:delete
      - type: conditional
        conditions:
          - entity: sensor.recycling
            state: today
        chip:
          type: template
          icon_color: white
          content: Recycling
          icon: mdi:recycle-variant
      - type: conditional
        conditions:
          - entity: binary_sensor.is_rain_2
            state: 'on'
        chip:
          type: template
          icon_color: white
          content: Raining
          icon: mdi:weather-pouring
          tap_action:
            action: navigate
            navigation_path: weather
      - type: conditional
        conditions:
          - entity: binary_sensor.is_snow
            state: 'on'
        chip:
          type: template
          icon_color: white
          content: Snowing
          icon: mdi:weather-snowy
      - type: conditional
        conditions:
          - entity: input_boolean.vacation_mode
            state: 'on'
        chip:
          type: template
          icon_color: white
          content: Vacation Mode On
          icon: mdi:airplane-check
      - type: conditional
        conditions:
          - entity: input_boolean.guest_mode
            state: 'on'
        chip:
          type: template
          icon_color: white
          content: Guest Mode On
          icon: mdi:bed
      - type: conditional
        conditions:
          - entity: binary_sensor.wind_chill_active
            state: 'on'
        chip:
          type: template
          icon_color: white
          content: >-
            Wind Chill:
            {{states.sensor.wind_chill.state}}{{states.sensor.wind_chill.attributes.unit_of_measurement}}
          icon: '{{ states.sensor.wind_chill.attributes.icon }}'
      - type: conditional
        conditions:
          - entity: binary_sensor.heat_index_active
            state: 'on'
        chip:
          type: template
          icon_color: white
          content: 'Heat Index: {{states.sensor.heat_index.state}}F'
          icon: '{{states.sensor.heat_index.attributes.icon}}'
          tap_action:
            action: navigate
            navigation_path: weather
      - type: conditional
        conditions:
          - entity: vacuum.philoctetes
            state: error
        chip:
          type: template
          icon_color: white
          content: Philoctetes
          icon: mdi:alert
      - type: conditional
        conditions:
          - entity: vacuum.catbug
            state: error
        chip:
          type: template
          icon_color: white
          content: Catbug
          icon: mdi:alert
      - type: conditional
        conditions:
          - entity: vacuum.gurtrude
            state: error
        chip:
          type: template
          icon_color: white
          content: Gurtrude
          icon: mdi:alert
      - type: conditional
        conditions:
          - entity: binary_sensor.wx_card
            state: 'on'
        chip:
          type: template
          entity: sensor.nws_alerts
          tap_action:
            action: navigate
            navigation_path: wxalert
          icon_color: white
          content: |-
            {% if states.sensor.nws_alerts.state | int > 1 %}
              {{states.sensor.nws_alerts.state | int}} NWS Alerts
            {% else %}
              {{states.sensor.nws_alerts.attributes.title}}
            {% endif %}
          icon: '{{states.sensor.nws_alerts.attributes.icon}}'
      - type: conditional
        conditions:
          - entity: input_select.dishwasher_state
            state: Clean
        chip:
          type: template
          icon_color: white
          content: Dishwasher Done
          icon: mdi:dishwasher
          tap_action:
            action: call-service
            service: script.mark_dishwasher_as_dirty
      - type: conditional
        conditions:
          - entity: binary_sensor.water_front_planter
            state: 'on'
        chip:
          type: template
          icon_color: white
          content: Front Planter
          icon: mdi:watering-can-outline
          tap_action:
            action: navigate
            navigation_path: outside
      - type: conditional
        conditions:
          - entity: binary_sensor.water_greenhouse
            state: 'on'
        chip:
          type: template
          icon_color: white
          content: Greenhouse
          icon: mdi:watering-can-outline
          tap_action:
            action: navigate
            navigation_path: outside